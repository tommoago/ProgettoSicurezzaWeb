<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http</name>
  </assembly>
  <members>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <summary>Crea un oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> che rappresenta un'eccezione.</summary>
      <returns>La richiesta deve essere associata a un'istanza di <see cref="T:System.Web.Http.HttpConfiguration" />.Oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> il cui contenuto è una rappresentazione serializzata di un'istanza di <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Richiesta HTTP.</param>
      <param name="statusCode">Codice di stato della risposta.</param>
      <param name="exception">Eccezione.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <summary>Crea un oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> che rappresenta un messaggio di errore.</summary>
      <returns>La richiesta deve essere associata a un'istanza di <see cref="T:System.Web.Http.HttpConfiguration" />.Oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> il cui contenuto è una rappresentazione serializzata di un'istanza di <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Richiesta HTTP.</param>
      <param name="statusCode">Codice di stato della risposta.</param>
      <param name="message">Messaggio di errore.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)">
      <summary>Crea un oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> che rappresenta un'eccezione con un messaggio di errore.</summary>
      <returns>La richiesta deve essere associata a un'istanza di <see cref="T:System.Web.Http.HttpConfiguration" />.Oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> il cui contenuto è una rappresentazione serializzata di un'istanza di <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Richiesta HTTP.</param>
      <param name="statusCode">Codice di stato della risposta.</param>
      <param name="message">Messaggio di errore.</param>
      <param name="exception">Eccezione.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)">
      <summary>Crea un oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> che rappresenta un errore.</summary>
      <returns>La richiesta deve essere associata a un'istanza di <see cref="T:System.Web.Http.HttpConfiguration" />.Oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> il cui contenuto è una rappresentazione serializzata di un'istanza di <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Richiesta HTTP.</param>
      <param name="statusCode">Codice di stato della risposta.</param>
      <param name="error">Errore HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Crea un oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> che rappresenta un errore nello stato del modello.</summary>
      <returns>La richiesta deve essere associata a un'istanza di <see cref="T:System.Web.Http.HttpConfiguration" />.Oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> il cui contenuto è una rappresentazione serializzata di un'istanza di <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Richiesta HTTP.</param>
      <param name="statusCode">Codice di stato della risposta.</param>
      <param name="modelState">Stato del modello.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</summary>
      <returns>Istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> inizializzata collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</returns>
      <param name="request">Messaggio di richiesta HTTP da cui deriva questo messaggio di risposta.</param>
      <param name="statusCode">Codice di stato della risposta HTTP.</param>
      <param name="value">Contenuto del messaggio di risposta HTTP.</param>
      <typeparam name="T">Tipo del messaggio di risposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</summary>
      <returns>Istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> inizializzata collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</returns>
      <param name="request">Messaggio di richiesta HTTP da cui deriva questo messaggio di risposta.</param>
      <param name="statusCode">Codice di stato della risposta HTTP.</param>
      <param name="value">Contenuto del messaggio di risposta HTTP.</param>
      <param name="formatter">Formattatore di media type.</param>
      <typeparam name="T">Tipo del messaggio di risposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</summary>
      <returns>Istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> inizializzata collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</returns>
      <param name="request">Messaggio di richiesta HTTP da cui deriva questo messaggio di risposta.</param>
      <param name="statusCode">Codice di stato della risposta HTTP.</param>
      <param name="value">Contenuto del messaggio di risposta HTTP.</param>
      <param name="formatter">Formattatore di media type.</param>
      <param name="mediaType">Valore di intestazione del media type.</param>
      <typeparam name="T">Tipo del messaggio di risposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</summary>
      <returns>Istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> inizializzata collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</returns>
      <param name="request">Messaggio di richiesta HTTP da cui deriva questo messaggio di risposta.</param>
      <param name="statusCode">Codice di stato della risposta HTTP.</param>
      <param name="value">Contenuto del messaggio di risposta HTTP.</param>
      <param name="formatter">Formattatore di media type.</param>
      <param name="mediaType">Media type.</param>
      <typeparam name="T">Tipo del messaggio di risposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</summary>
      <returns>Istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> inizializzata collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</returns>
      <param name="request">Messaggio di richiesta HTTP da cui deriva questo messaggio di risposta.</param>
      <param name="statusCode">Codice di stato della risposta HTTP.</param>
      <param name="value">Contenuto del messaggio di risposta HTTP.</param>
      <param name="mediaType">Valore di intestazione del media type.</param>
      <typeparam name="T">Tipo del messaggio di risposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</summary>
      <returns>Istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> inizializzata collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</returns>
      <param name="request">Messaggio di richiesta HTTP da cui deriva questo messaggio di risposta.</param>
      <param name="statusCode">Codice di stato della risposta HTTP.</param>
      <param name="value">Contenuto del messaggio di risposta HTTP.</param>
      <param name="mediaType">Media type.</param>
      <typeparam name="T">Tipo del messaggio di risposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Web.Http.HttpConfiguration)">
      <summary>Crea un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</summary>
      <returns>Istanza di <see cref="T:System.Net.Http.HttpResponseMessage" /> inizializzata collegata all'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> associato.</returns>
      <param name="request">Messaggio di richiesta HTTP da cui deriva questo messaggio di risposta.</param>
      <param name="statusCode">Codice di stato della risposta HTTP.</param>
      <param name="value">Contenuto del messaggio di risposta HTTP.</param>
      <param name="configuration">Configurazione HTTP contenente il resolver di dipendenza utilizzato per risolvere servizi.</param>
      <typeparam name="T">Tipo del messaggio di risposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.DisposeRequestResources(System.Net.Http.HttpRequestMessage)">
      <summary>Elimina tutte le risorse tracciate associate al parametro <paramref name="request" /> che sono state aggiunte tramite il metodo <see cref="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)" />.</summary>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetClientCertificate(System.Net.Http.HttpRequestMessage)">
      <summary>Ottiene il certificato X.509 corrente dalla richiesta HTTP specificata.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> corrente oppure null se non è disponibile alcun certificato.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetConfiguration(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera l'oggetto <see cref="T:System.Web.Http.HttpConfiguration" /> per la richiesta specificata.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.HttpConfiguration" /> per la richiesta specificata.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetCorrelationId(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera l'oggetto <see cref="T:System.Guid" /> che è stato assegnato come ID di correlazione associato al parametro <paramref name="request" /> specificato. Il valore verrà creato e impostato la prima volta che verrà chiamato il metodo.</summary>
      <returns>Oggetto <see cref="T:System.Guid" /> che rappresenta l'ID di correlazione associato alla richiesta.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetDependencyScope(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera l'oggetto <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> per la richiesta specificata oppure null se la richiesta non è disponibile.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> per la richiesta specificata oppure null se la richiesta non è disponibile.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetQueryNameValuePairs(System.Net.Http.HttpRequestMessage)">
      <summary>Ottiene la stringa di query analizzata come raccolta di coppie chiave/valore.</summary>
      <returns>Stringa di query come raccolta di coppie chiave/valore.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera l'oggetto <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> per la richiesta specificata oppure null se la richiesta non è disponibile.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> per la richiesta specificata oppure null se la richiesta non è disponibile.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetSynchronizationContext(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera l'oggetto <see cref="T:System.Threading.SynchronizationContext" /> per la richiesta specificata oppure null se la richiesta non è disponibile.</summary>
      <returns>Oggetto <see cref="T:System.Threading.SynchronizationContext" /> per la richiesta specificata oppure null se la richiesta non è disponibile.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetUrlHelper(System.Net.Http.HttpRequestMessage)">
      <summary>Ottiene un'istanza di <see cref="T:System.Web.Http.Routing.UrlHelper" /> per una richiesta HTTP.</summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Routing.UrlHelper" /> che viene inizializzata per la richiesta HTTP specificata.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)">
      <summary>Aggiunge il parametro <paramref name="resource" /> specificato a un elenco di risorse che verranno eliminate da un host al momento dell'eliminazione di <paramref name="request" />.</summary>
      <param name="request">Richiesta HTTP che controlla il ciclo di vita di <paramref name="resource" />.</param>
      <param name="resource">Risorsa da eliminare al momento dell'eliminazione di <paramref name="request" />.</param>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessageExtensions">
      <summary>Rappresenta le estensioni del messaggio per la risposta HTTP restituita da un'operazione ASP.NET.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.TryGetContentValue``1(System.Net.Http.HttpResponseMessage,``0@)">
      <summary>Tenta di recuperare il valore del contenuto per <see cref="T:System.Net.Http.HttpResponseMessageExtensions" />.</summary>
      <returns>Risultato del recupero del valore del contenuto.</returns>
      <param name="response">Risposta dell'operazione.</param>
      <param name="value">Valore del contenuto.</param>
      <typeparam name="T">Tipo del valore da recuperare.</typeparam>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterExtensions">
      <summary>Rappresenta estensioni per l'aggiunta di elementi <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> a un'istanza di <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Aggiorna il set di elementi <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> del formattatore specificato in modo da associare il mediaType alle istanze di <see cref="T:System.Uri" /> che terminano con il valore di uriPathExtension specificato. </summary>
      <param name="formatter">
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> che riceverà il nuovo elemento <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />.</param>
      <param name="uriPathExtension">Stringa dell'estensione di percorso di <see cref="T:System.Uri" />.</param>
      <param name="mediaType">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> da associare a istanze di <see cref="T:System.Uri" /> che terminano con uriPathExtension.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)">
      <summary> Aggiorna il set di elementi <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> del formattatore specificato in modo da associare il mediaType alle istanze di <see cref="T:System.Uri" /> che terminano con il valore di uriPathExtension specificato. </summary>
      <param name="formatter">
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> che riceverà il nuovo elemento <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />.</param>
      <param name="uriPathExtension">Stringa dell'estensione di percorso di <see cref="T:System.Uri" />.</param>
      <param name="mediaType">Media type della stringa da associare a istanze di <see cref="T:System.Uri" /> che terminano con uriPathExtension.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.UriPathExtensionMapping">
      <summary>Fornisce più elementi <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> da estensioni di percorso incluse in un'istanza di <see cref="T:System.Uri" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />. </summary>
      <param name="uriPathExtension">Estensione corrispondente a mediaType. Questo valore non può includere punti o caratteri jolly.</param>
      <param name="mediaType">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> che verrà restituito in caso di corrispondenza con uriPathExtension.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.String)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />. </summary>
      <param name="uriPathExtension">Estensione corrispondente a mediaType. Questo valore non può includere punti o caratteri jolly.</param>
      <param name="mediaType">Media type che verrà restituito in caso di corrispondenza di uriPathExtension.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Restituisce un valore che indica se questa istanza di <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> può fornire un elemento <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> per l'istanza di <see cref="T:System.Uri" /> della richiesta. </summary>
      <returns>Se viene determinata una corrispondenza tra questa istanza e un'estensione di file nella richiesta, restituisce 1,0. In caso contrario, restituisce 0,0.</returns>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da controllare.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtension">
      <summary> Ottiene l'estensione di percorso dell'istanza di <see cref="T:System.Uri" />. </summary>
      <returns>Estensione di percorso dell'istanza di <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="F:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtensionKey">
      <summary>Chiave dell'estensione di percorso dell'istanza di <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="T:System.Web.Http.AcceptVerbsAttribute">
      <summary>Rappresenta un attributo che specifica a quali metodi HTTP risponderà un metodo di azione.</summary>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.AcceptVerbsAttribute" /> utilizzando un elenco di metodi HTTP ai quali il metodo di azione risponderà.</summary>
      <param name="methods">Metodi HTTP ai quali il metodo di azione risponderà.</param>
    </member>
    <member name="P:System.Web.Http.AcceptVerbsAttribute.HttpMethods">
      <summary>Ottiene o imposta l'elenco di metodi HTTP ai quali il metodo di azione risponderà.</summary>
      <returns>Ottiene o imposta l'elenco di metodi HTTP ai quali il metodo di azione risponderà.</returns>
    </member>
    <member name="T:System.Web.Http.ActionNameAttribute">
      <summary>Rappresenta un attributo utilizzato per il nome di un'azione.</summary>
    </member>
    <member name="M:System.Web.Http.ActionNameAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ActionNameAttribute" />.</summary>
      <param name="name">Nome dell'azione.</param>
    </member>
    <member name="P:System.Web.Http.ActionNameAttribute.Name">
      <summary>Ottiene o imposta il nome dell'azione.</summary>
      <returns>Nome dell'azione.</returns>
    </member>
    <member name="T:System.Web.Http.AllowAnonymousAttribute">
      <summary>Specifica che azioni e controller vengano ignorati da <see cref="T:System.Web.Http.AuthorizeAttribute" /> durante il processo di autorizzazione.</summary>
    </member>
    <member name="M:System.Web.Http.AllowAnonymousAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.ApiController">
      <summary>Definisce proprietà e metodi per controller API.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ApiController" />.</summary>
    </member>
    <member name="P:System.Web.Http.ApiController.Configuration">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Web.Http.HttpConfiguration" /> dell'istanza corrente di <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.HttpConfiguration" /> dell'istanza corrente di <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.ControllerContext">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> dell'istanza corrente di <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> dell'istanza corrente di <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose">
      <summary>Esegue le attività definite dall'applicazione relative alla liberazione, al rilascio o alla reimpostazione di risorse non gestite.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dall'oggetto e, facoltativamente, quelle gestite.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite. false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono una singola operazione HTTP.</summary>
      <returns>Nuova attività avviata.</returns>
      <param name="controllerContext">Contesto del controller per una singola operazione HTTP.</param>
      <param name="cancellationToken">Token di annullamento assegnato per l'operazione HTTP.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Inizializza l'istanza di <see cref="T:System.Web.Http.ApiController" /> con l'oggetto <paramref name="controllerContext" /> specificato.</summary>
      <param name="controllerContext">Oggetto <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> utilizzato per l'inizializzazione.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.ModelState">
      <summary>Ottiene lo stato del modello dopo il processo di associazione del modello.</summary>
      <returns>Stato del modello dopo il processo di associazione del modello.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.Request">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> dell'istanza corrente di <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>Oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> dell'istanza corrente di <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.Url">
      <summary>Restituisce un'istanza di un oggetto <see cref="T:System.Web.Http.Routing.UrlHelper" />, utilizzato per generare URL ad altre API.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Routing.UrlHelper" /> utilizzato per generare URL ad altre API.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.User">
      <summary> Restituisce l'entità corrente associata a questa richiesta. </summary>
      <returns>Entità corrente associata a questa richiesta.</returns>
    </member>
    <member name="T:System.Web.Http.AuthorizeAttribute">
      <summary>Specifica il filtro di autorizzazione che verifica l'interfaccia <see cref="T:System.Security.Principal.IPrincipal" /> della richiesta.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Elabora le richieste che non ottengono l'autorizzazione.</summary>
      <param name="actionContext">Contesto.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Indica se il controllo specificato è autorizzato.</summary>
      <returns>true se il controllo è autorizzato. In caso contrario, false.</returns>
      <param name="actionContext">Contesto.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Chiamato quando viene eseguita l'autorizzazione di un'azione.</summary>
      <param name="actionContext">Contesto.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro di contesto è null.</exception>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Roles">
      <summary>Ottiene o imposta i ruoli autorizzati. </summary>
      <returns>Stringa di ruoli. </returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.TypeId">
      <summary>Ottiene un identificatore univoco per questo attributo.</summary>
      <returns>Identificatore univoco per questo attributo.</returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Users">
      <summary>Ottiene o imposta gli utenti autorizzati. </summary>
      <returns>Stringa di utenti. </returns>
    </member>
    <member name="T:System.Web.Http.FromBodyAttribute">
      <summary> Attributo che specifica che un parametro di azione proviene solo dal corpo entità dell'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso. </summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.FromBodyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ottiene un'associazione di parametri.</summary>
      <returns>Associazione di parametri.</returns>
      <param name="parameter">Descrizione del parametro.</param>
    </member>
    <member name="T:System.Web.Http.FromUriAttribute">
      <summary>Attributo che specifica che un parametro di azione proviene dall'URI del messaggio <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.FromUriAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Ottiene le factory del provider di valori per lo strumento di associazione di modelli.</summary>
      <returns>Raccolta di oggetti <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="configuration">Configurazione.</param>
    </member>
    <member name="T:System.Web.Http.HttpBindNeverAttribute">
      <summary>Rappresenta attributi che specificano che l'associazione HTTP deve escludere una proprietà.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindNeverAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpBindNeverAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.HttpBindRequiredAttribute">
      <summary>Rappresenta l'attributo obbligatorio per l'associazione HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindRequiredAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpBindRequiredAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.HttpConfiguration">
      <summary> Configurazione delle istanze di <see cref="T:System.Web.Http.HttpServer" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor(System.Web.Http.HttpRouteCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpConfiguration" /> con una raccolta di route HTTP.</summary>
      <param name="routes">Raccolta di route HTTP da associare a questa istanza.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.DependencyResolver">
      <summary>Ottiene o imposta il resolver di dipendenza associato a questa istanza.</summary>
      <returns>Resolver di dipendenza.</returns>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose">
      <summary>Esegue le attività definite dall'applicazione relative alla liberazione, al rilascio o alla reimpostazione di risorse non gestite.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dall'oggetto e, facoltativamente, quelle gestite.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite, false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Filters">
      <summary>Ottiene l'elenco dei filtri applicati a tutte le richieste gestite mediante questa istanza di <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>Elenco di filtri.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Formatters">
      <summary>Ottiene i formattatori di media type per questa istanza.</summary>
      <returns>Raccolta di oggetti <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.IncludeErrorDetailPolicy">
      <summary>Ottiene o imposta un valore che indica se nei messaggi di errore devono essere inclusi i dettagli dell'errore.</summary>
      <returns>Valore di <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> che indica i criteri relativi ai dettagli degli errori.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Initializer">
      <summary> Ottiene o imposta l'azione che eseguirà l'inizializzazione finale dell'istanza di <see cref="T:System.Web.Http.HttpConfiguration" /> prima di essere utilizzata per l'elaborazione di richieste. </summary>
      <returns>Azione che eseguirà l'inizializzazione finale dell'istanza di <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.MessageHandlers">
      <summary>Ottiene un elenco ordinato di istanze di <see cref="T:System.Net.Http.DelegatingHandler" /> da richiamare quando un oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> si sposta più in alto nello stack e di conseguenza un oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> si sposta più in basso nello stack. </summary>
      <returns>Raccolta di gestori di messaggi.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.ParameterBindingRules">
      <summary>Raccolta di regole relative alle modalità di associazione dei parametri.</summary>
      <returns>Raccolta di funzioni in grado di generare un'associazione per un parametro specificato.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Properties">
      <summary>Ottiene le proprietà associate a questa istanza.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contenente le proprietà.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Routes">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.Http.HttpRouteCollection" /> associato a questa istanza di <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>Classe <see cref="T:System.Web.Http.HttpRouteCollection" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Services">
      <summary>Ottiene il contenitore dei servizi predefiniti associati a questa istanza.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> contenente i servizi predefiniti per questa istanza.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.VirtualPathRoot">
      <summary>Ottiene il percorso virtuale radice.</summary>
      <returns>Percorso virtuale radice.</returns>
    </member>
    <member name="T:System.Web.Http.HttpConfigurationExtensions">
      <summary>Contiene metodi di estensione per la classe <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.BindParameter(System.Web.Http.HttpConfiguration,System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary> Registrare che il tipo di parametro specificato in un'azione deve essere associato mediante lo strumento di associazione di modelli. </summary>
      <param name="configuration">Configurazione da aggiornare.</param>
      <param name="type">Tipo di parametro al quale viene applicato lo strumento di associazione.</param>
      <param name="binder">Strumento di associazione di modelli.</param>
    </member>
    <member name="T:System.Web.Http.HttpDeleteAttribute">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.HttpDeleteAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpDeleteAttribute.HttpMethods">
      <summary>Ottiene una raccolta di metodi HTTP.</summary>
      <returns>Raccolta di metodi HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpError">
      <summary> Definisce un contenitore serializzabile per le informazioni arbitrarie sugli errori. </summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpError" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Exception,System.Boolean)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpError" /> per exception. </summary>
      <param name="exception">Eccezione da utilizzare per le informazioni sugli errori.</param>
      <param name="includeErrorDetail">  true per includere le informazioni sull'eccezione nell'errore. In caso contrario, false.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.String)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpError" /> contenente il messaggio di errore message. </summary>
      <param name="message">Messaggio di errore da associare a questa istanza.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpError" /> per modelState. </summary>
      <param name="modelState">Stato del modello non valido da utilizzare per le informazioni sugli errori.</param>
      <param name="includeErrorDetail">  true per includere i messaggi di eccezione nell'errore. In caso contrario, false.</param>
    </member>
    <member name="P:System.Web.Http.HttpError.Message">
      <summary> Messaggio di errore associato a questa istanza. </summary>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Questo metodo è riservato e non deve essere utilizzato.</summary>
      <returns>Restituisce sempre null.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Genera un'istanza di <see cref="T:System.Web.Http.HttpError" /> dalla relativa rappresentazione XML.</summary>
      <param name="reader">Flusso <see cref="T:System.Xml.XmlReader" /> dal quale l'oggetto viene deserializzato.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Converte un'istanza di <see cref="T:System.Web.Http.HttpError" /> nella relativa rappresentazione XML.</summary>
      <param name="writer">Flusso <see cref="T:System.Xml.XmlWriter" /> in cui l'oggetto viene serializzato.</param>
    </member>
    <member name="T:System.Web.Http.HttpGetAttribute">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.HttpGetAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpGetAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpGetAttribute.HttpMethods">
      <summary>Ottiene la raccolta di metodi HTTP.</summary>
      <returns>Raccolta di metodi HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpHeadAttribute">
      <summary>Rappresenta un attributo head HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpHeadAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpHeadAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpHeadAttribute.HttpMethods">
      <summary>Ottiene la raccolta di metodi HTTP.</summary>
      <returns>Raccolta di metodi HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpOptionsAttribute">
      <summary>Rappresenta un attributo utilizzato per limitare un metodo HTTP in modo che gestisca solo richieste OPTIONS HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpOptionsAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpOptionsAttribute.HttpMethods">
      <summary>Ottiene la raccolta dei metodi supportati dalle richieste OPTIONS HTTP.</summary>
      <returns>Raccolta dei metodi supportati dalle richieste OPTIONS HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPatchAttribute">
      <summary>Rappresenta un attributo patch HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPatchAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpPatchAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPatchAttribute.HttpMethods">
      <summary>Ottiene una raccolta di metodi HTTP.</summary>
      <returns>Raccolta di metodi HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPostAttribute">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPostAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpPostAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPostAttribute.HttpMethods">
      <summary>Ottiene una raccolta di metodi HTTP.</summary>
      <returns>Raccolta di metodi HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPutAttribute">
      <summary>Rappresenta un attributo utilizzato per limitare un metodo HTTP in modo che gestisca solo richieste PUT HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPutAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpPutAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPutAttribute.HttpMethods">
      <summary>Ottiene la raccolta di sola lettura dei metodi PUT HTTP.</summary>
      <returns>Raccolta di sola lettura dei metodi PUT HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpResponseException">
      <summary> Eccezione che consente la restituzione di una determinata classe <see cref="T:System.Net.Http.HttpResponseMessage" /> al client. </summary>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpResponseException" />.</summary>
      <param name="response">Risposta HTTP da restituire al client.</param>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.HttpStatusCode)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpResponseException" />. </summary>
      <param name="statusCode">Codice di stato della risposta.</param>
    </member>
    <member name="P:System.Web.Http.HttpResponseException.Response">
      <summary>Ottiene la risposta HTTP da restituire al client.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpResponseMessage" /> che rappresenta la risposta HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollection">
      <summary>Raccolta di istanze di <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
      <param name="virtualPathRoot">Radice del percorso virtuale.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Add(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Aggiunge un'istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" /> alla raccolta.</summary>
      <param name="name">Nome della route.</param>
      <param name="route">Istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" /> da aggiungere alla raccolta.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Clear">
      <summary>Rimuove tutti gli elementi dall'insieme.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Contains(System.Web.Http.Routing.IHttpRoute)">
      <summary>Determina se la raccolta contiene un oggetto <see cref="T:System.Web.Http.Routing.IHttpRoute" /> specifico.</summary>
      <returns>true se <see cref="T:System.Web.Http.Routing.IHttpRoute" /> viene trovato nella raccolta. In caso contrario, false.</returns>
      <param name="item">Oggetto da individuare nell'insieme.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ContainsKey(System.String)">
      <summary>Determina se la raccolta contiene un elemento con la chiave specificata.</summary>
      <returns>true se la raccolta contiene un elemento con la chiave. In caso contrario, false.</returns>
      <param name="name">Chiave da individuare nella raccolta.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.Routing.IHttpRoute}[],System.Int32)">
      <summary>Copia le istanze di <see cref="T:System.Web.Http.Routing.IHttpRoute" /> della raccolta in una matrice, a partire da un indice di matrice specifico.</summary>
      <param name="array">Matrice che rappresenta la destinazione degli elementi copiati dalla raccolta.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene iniziata la copia.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Web.Http.Routing.IHttpRoute[],System.Int32)">
      <summary>Copia i nomi delle route e le istanze di <see cref="T:System.Web.Http.Routing.IHttpRoute" /> della raccolta in una matrice, a partire da un indice di matrice specifico.</summary>
      <param name="array">Matrice che rappresenta la destinazione degli elementi copiati dalla raccolta.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene iniziata la copia.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Count">
      <summary>Ottiene il numero di elementi contenuti nella raccolta.</summary>
      <returns>Numero di elementi contenuti nella raccolta.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Crea un'istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Modello di route.</param>
      <param name="defaults">Oggetto contenente i parametri di route predefiniti.</param>
      <param name="constraints">Oggetto contenente i vincoli della route.</param>
      <param name="dataTokens">Token di dati della route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)">
      <summary>Crea un'istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Modello di route.</param>
      <param name="defaults">Oggetto contenente i parametri di route predefiniti.</param>
      <param name="constraints">Oggetto contenente i vincoli della route.</param>
      <param name="dataTokens">Token di dati della route.</param>
      <param name="handler">Gestore di messaggi da utilizzare per la route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Object,System.Object)">
      <summary>Crea un'istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>Nuova istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Modello di route.</param>
      <param name="defaults">Oggetto contenente i parametri di route predefiniti.</param>
      <param name="constraints">Oggetto contenente i vincoli della route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose">
      <summary>Esegue le attività definite dall'applicazione relative alla liberazione, al rilascio o alla reimpostazione di risorse non gestite.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dall'oggetto e, facoltativamente, quelle gestite.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite, false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che scorre la raccolta.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Ottiene i dati di route per una richiesta HTTP specificata.</summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> che rappresenta i dati di route.</returns>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ottiene un percorso virtuale.</summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" /> che rappresenta il percorso virtuale.</returns>
      <param name="request">Richiesta HTTP.</param>
      <param name="name">Nome della route.</param>
      <param name="values">Valori della route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Insert(System.Int32,System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Inserisce un'istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" /> nella raccolta.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito <paramref name="value" />.</param>
      <param name="name">Nome della route.</param>
      <param name="value">
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> da inserire. Il valore non può essere null.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>true se la raccolta è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> in corrispondenza dell'indice specificato.</returns>
      <param name="index">Indice in base zero dell'elemento da ottenere o da impostare.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.String)">
      <summary>Ottiene o imposta l'elemento con il nome della route specificato.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> in corrispondenza dell'indice specificato.</returns>
      <param name="name">Nome della route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.OnGetEnumerator">
      <summary>Chiamato internamente per ottenere l'enumeratore per la raccolta.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Remove(System.String)">
      <summary>Rimuove un'istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" /> dalla raccolta.</summary>
      <returns>true se l'elemento è stato rimosso. In caso contrario, false. Questo metodo restituisce inoltre false se il parametro <paramref name="name" /> non viene trovato nella raccolta.</returns>
      <param name="name">Nome della route da rimuovere.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Add(System.Web.Http.Routing.IHttpRoute)">
      <summary>Aggiunge un elemento all'insieme.</summary>
      <param name="route">Oggetto da aggiungere all'insieme.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Remove(System.Web.Http.Routing.IHttpRoute)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico dalla raccolta.</summary>
      <returns>true se il parametro <paramref name="route" /> è stato rimosso dalla raccolta. In caso contrario, false. Questo metodo restituisce inoltre false se <paramref name="route" /> non viene trovato nella raccolta originale.</returns>
      <param name="route">Oggetto da rimuovere dall'insieme.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che scorre la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere l'insieme.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.TryGetValue(System.String,System.Web.Http.Routing.IHttpRoute@)">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.Http.Routing.IHttpRoute" /> con il nome della route specificato.</summary>
      <returns>true se la raccolta contiene un elemento con il nome specificato. In caso contrario, false.</returns>
      <param name="name">Nome della route.</param>
      <param name="route">Quando termina, questo metodo restituisce l'istanza di <see cref="T:System.Web.Http.Routing.IHttpRoute" /> se il nome della route viene trovato. In caso contrario, null. Questo parametro viene passato senza inizializzazione.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.VirtualPathRoot">
      <summary>Ottiene la radice del percorso virtuale.</summary>
      <returns>Radice del percorso virtuale.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollectionExtensions">
      <summary> Metodi di estensione per <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Esegue il mapping del modello di route specificato.</summary>
      <returns>Riferimento alla route di cui è stato eseguito il mapping.</returns>
      <param name="routes">Raccolta di route per l'applicazione.</param>
      <param name="name">Nome della route di cui eseguire il mapping.</param>
      <param name="routeTemplate">Modello da utilizzare per la route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Esegue il mapping del modello di route specificato e imposta i valori della route predefiniti.</summary>
      <returns>Riferimento alla route di cui è stato eseguito il mapping.</returns>
      <param name="routes">Raccolta di route per l'applicazione.</param>
      <param name="name">Nome della route di cui eseguire il mapping.</param>
      <param name="routeTemplate">Modello da utilizzare per la route.</param>
      <param name="defaults">Oggetto che contiene valori di route predefiniti.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Esegue il mapping del modello di route specificato e imposta valori di route e vincoli predefiniti.</summary>
      <returns>Riferimento alla route di cui è stato eseguito il mapping.</returns>
      <param name="routes">Raccolta di route per l'applicazione.</param>
      <param name="name">Nome della route di cui eseguire il mapping.</param>
      <param name="routeTemplate">Modello da utilizzare per la route.</param>
      <param name="defaults">Oggetto che contiene valori di route predefiniti.</param>
      <param name="constraints">Set di espressioni che applicano un vincolo ai valori per routeTemplate.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary> Esegue il mapping del modello di route specificato e imposta i valori di route, i vincoli e il gestore di messaggi dell'endpoint predefiniti. </summary>
      <returns>Riferimento alla route di cui è stato eseguito il mapping.</returns>
      <param name="routes">Raccolta di route per l'applicazione.</param>
      <param name="name">Nome della route di cui eseguire il mapping.</param>
      <param name="routeTemplate">Modello da utilizzare per la route.</param>
      <param name="defaults">Oggetto che contiene valori di route predefiniti.</param>
      <param name="constraints">Set di espressioni che applicano un vincolo ai valori per routeTemplate.</param>
      <param name="handler">Gestore a cui verrà inviata la richiesta.</param>
    </member>
    <member name="T:System.Web.Http.HttpServer">
      <summary> Definisce un'implementazione di <see cref="T:System.Net.Http.HttpMessageHandler" /> che esegue l'allocazione della CPU per un'istanza di <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso e crea come risultato un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpServer" /> utilizzando la configurazione e il dispatcher predefiniti.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpServer" /> con un dispatcher specificato. </summary>
      <param name="dispatcher">Dispatcher HTTP che gestirà le richieste in ingresso.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpServer" /> con una configurazione specificata.</summary>
      <param name="configuration">
        <see cref="T:System.Web.Http.HttpConfiguration" /> utilizzata per configurare questa istanza.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.HttpServer" /> con una configurazione e un dispatcher specificati.</summary>
      <param name="configuration">
        <see cref="T:System.Web.Http.HttpConfiguration" /> utilizzata per configurare questa istanza.</param>
      <param name="dispatcher">Dispatcher HTTP che gestirà le richieste in ingresso.</param>
    </member>
    <member name="P:System.Web.Http.HttpServer.Configuration">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.Http.HttpConfiguration" /> utilizzato per configurare questa istanza.</summary>
      <returns>
        <see cref="T:System.Web.Http.HttpConfiguration" /> utilizzata per configurare questa istanza.</returns>
    </member>
    <member name="P:System.Web.Http.HttpServer.Dispatcher">
      <summary>Ottiene il dispatcher HTTP che gestisce le richieste in ingresso.</summary>
      <returns>Dispatcher HTTP che gestisce le richieste in ingresso.</returns>
    </member>
    <member name="M:System.Web.Http.HttpServer.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite utilizzate dall'oggetto e, facoltativamente, quelle gestite.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite, false per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.Initialize">
      <summary>Prepara il server per l'operazione.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Esegue l'allocazione della CPU per un'istanza di <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso.</summary>
      <returns> Attività che rappresenta l'operazione asincrona.</returns>
      <param name="request">Richiesta per cui eseguire l'allocazione della CPU.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
    </member>
    <member name="T:System.Web.Http.IncludeErrorDetailPolicy">
      <summary>Specifica se nei messaggi di errore devono essere inclusi i dettagli relativi agli errori, ad esempio i messaggi di eccezione e le analisi dello stack.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Default">
      <summary>Utilizzare il comportamento predefinito per l'ambiente host. Per l'hosting ASP.NET, utilizzare il valore dell'elemento customErrors nel file Web.config. Per il self-hosting, utilizzare il valore <see cref="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly" />.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly">
      <summary>Include i dettagli relativi agli errori solo per la risposta a una richiesta locale. </summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Always">
      <summary>Include sempre i messaggi relativi agli errori.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Never">
      <summary>Non include mai i dettagli relativi agli errori. </summary>
    </member>
    <member name="T:System.Web.Http.NonActionAttribute">
      <summary>Rappresenta un attributo utilizzato per indicare che un metodo del controller non è un metodo di azione.</summary>
    </member>
    <member name="M:System.Web.Http.NonActionAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.NonActionAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.ParameterBindingAttribute">
      <summary> Attributo presente in un parametro o un tipo che genera un oggetto <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.  Se l'attributo si trova in una dichiarazione del tipo, è come se fosse presente in tutti i parametri azione di tale tipo. </summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ParameterBindingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ottiene l'associazione di parametri.</summary>
      <returns>Associazione di parametri.</returns>
      <param name="parameter">Descrizione del parametro.</param>
    </member>
    <member name="T:System.Web.Http.RouteParameter">
      <summary>La classe <see cref="T:System.Web.Http.RouteParameter" /> consente di indicare le proprietà relative a un parametro di route (valori letterali e segnaposto inclusi nei segmenti di una proprietà <see cref="M:IHttpRoute.RouteTemplate" />).  Può ad esempio essere utilizzata per indicare che un parametro di route è facoltativo. </summary>
    </member>
    <member name="F:System.Web.Http.RouteParameter.Optional">
      <summary>Parametro facoltativo.</summary>
    </member>
    <member name="M:System.Web.Http.RouteParameter.ToString">
      <summary>Restituisce una classe <see cref="T:System.String" /> che rappresenta questa istanza.</summary>
      <returns>Classe <see cref="T:System.String" /> che rappresenta questa istanza.</returns>
    </member>
    <member name="T:System.Web.Http.ServicesExtensions">
      <summary>Fornisce funzioni di accesso indipendenti dai tipi per i servizi ottenuti da un oggetto <see cref="T:System.Web.Http.Controllers.ServicesContainer" />.</summary>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionInvoker(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionValueBinder(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetApiExplorer(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Description.IApiExplorer" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Description.IApiExplorer" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetAssembliesResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetBodyModelValidator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetContentNegotiator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetDocumentationProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Description.IDocumentationProvider" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Description.IDocumentationProvider" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetFilterProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene la raccolta di <see cref="T:System.Web.Http.Filters.IFilterProvider" />.</summary>
      <returns>Restituisce una raccolta di oggetti <see cref="T:System.Web.Http.Filters.IFilterProvider" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHostBufferPolicySelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerActivator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> oppure null se non è stata registrata alcuna istanza.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerTypeResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelBinderProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene la raccolta di <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
      <returns>Restituisce una raccolta di oggetti <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelMetadataProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelValidatorProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene la raccolta di <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
      <returns>Restituisce una raccolta di oggetti <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceManager(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Tracing.ITraceManager" />.</summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Tracing.ITraceManager" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceWriter(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene il servizio <see cref="T:System.Web.Http.Tracing.ITraceWriter" />. </summary>
      <returns>Restituisce un'istanza di <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetValueProviderFactories(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Ottiene la raccolta di <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</summary>
      <returns>Restituisce una raccolta di oggetti <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="services">Contenitore di servizi.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionInvoker">
      <summary>Richiama i metodi di azione di un controller.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Richiama in modo asincrono l'azione specificata utilizzando il contesto del controller specificato.</summary>
      <returns>Azione richiamata.</returns>
      <param name="actionContext">Contesto del controller.</param>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionSelector">
      <summary>Rappresenta un selettore dell'azione basato su reflection.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Ottiene i mapping di azioni per <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>Mapping di azioni.</returns>
      <param name="controllerDescriptor">Informazioni che descrivono un controller.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Seleziona un'azione per <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>Azione selezionata.</returns>
      <param name="controllerContext">Contesto del controller.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ControllerServices">
      <summary> Rappresenta un contenitore dei servizi che possono essere specifici di un controller.  Viene eseguita una copia shadow dei servizi dal contenitore <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> padre. Un controller può inserire un servizio in questa posizione o passarlo al set di servizi più globale.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.#ctor(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ControllerServices" />.</summary>
      <param name="parent">Contenitore di servizi padre.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ClearSingle(System.Type)">
      <summary>Rimuove un servizio a istanza singola dai servizi predefiniti.</summary>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetService(System.Type)">
      <summary>Ottiene un servizio del tipo specificato.</summary>
      <returns>Prima istanza del servizio oppure null se la ricerca del servizio ha esito negativo.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServiceInstances(System.Type)">
      <summary>Ottiene l'elenco degli oggetti servizio per un tipo di servizio specificato e convalida tale tipo di servizio.</summary>
      <returns>Elenco di oggetti servizio del tipo specificato.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServices(System.Type)">
      <summary>Ottiene l'elenco di oggetti servizio per un tipo di servizio specificato.</summary>
      <returns>Elenco di oggetti servizio del tipo specificato oppure un elenco vuoto se la ricerca del servizio ha esito negativo.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.IsSingleService(System.Type)">
      <summary>Esegue una query per determinare se un tipo di servizio è a istanza singola.</summary>
      <returns>true se il tipo di servizio supporta una singola istanza. false se supporta istanze multiple.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Sostituisce un oggetto servizio a istanza singola.</summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="service">Oggetto servizio che sostituisce l'istanza precedente.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionBinding">
      <summary>Descrive la modalità di esecuzione dell'associazione senza effettivamente eseguirla.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Controllers.HttpParameterBinding[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
      <param name="actionDescriptor">Puntatore all'indietro relativo all'azione per la quale viene eseguita l'associazione.  </param>
      <param name="bindings">Associazioni sincrone per ogni parametro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ActionDescriptor">
      <summary>Ottiene o imposta il puntatore all'indietro relativo all'azione per la quale viene eseguita l'associazione.  </summary>
      <returns>Puntatore all'indietro relativo all'azione per la quale viene eseguita l'associazione.  </returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.ExecuteBindingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono l'associazione per il contesto della richiesta specificato.</summary>
      <returns>Attività segnalata quando l'associazione viene completata. </returns>
      <param name="actionContext">Contesto di azione per l'associazione. Contiene il dizionario dei parametri che verrà popolato.</param>
      <param name="cancellationToken">Token per l'annullamento dell'operazione di associazione. In alternativa, un parametro può essere associato anche mediante uno strumento di associazione.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ParameterBindings">
      <summary>Ottiene o imposta associazioni sincrone per ogni parametro. </summary>
      <returns>Associazioni sincrone per ogni parametro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContext">
      <summary>Contiene informazioni relative all'azione in esecuzione.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor(System.Web.Http.Controllers.HttpControllerContext,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
      <param name="controllerContext">Contesto del controller.</param>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionArguments">
      <summary>Ottiene un elenco di argomenti dell'azione.</summary>
      <returns>Elenco di argomenti dell'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionDescriptor">
      <summary>Ottiene o imposta il descrittore dell'azione per il contesto dell'azione.</summary>
      <returns>Descrittore dell'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ControllerContext">
      <summary>Ottiene o imposta il contesto del controller.</summary>
      <returns>Contesto del controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ModelState">
      <summary>Ottiene il dizionario di stato del modello per il contesto.</summary>
      <returns>Dizionario di stato del modello.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Request">
      <summary>Ottiene il messaggio di richiesta per il contesto dell'azione.</summary>
      <returns>Messaggio di richiesta per il contesto dell'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Response">
      <summary>Ottiene o imposta il messaggio di risposta per il contesto dell'azione.</summary>
      <returns>Messaggio di risposta per il contesto dell'azione.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContextExtensions">
      <summary>Contiene i metodi di estensione per <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa il modello a un valore utilizzando il contesto del controller e il contesto di associazione specificati.</summary>
      <returns>true se l'associazione ha esito positivo. In caso contrario, false.</returns>
      <param name="actionContext">Contesto di esecuzione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Associa il modello a un valore utilizzando il contesto del controller, il contesto di associazione e gli strumenti di associazione di modelli specificati.</summary>
      <returns>true se l'associazione ha esito positivo. In caso contrario, false.</returns>
      <param name="actionContext">Contesto di esecuzione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
      <param name="binders">Raccolta di strumenti di associazione di modelli.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetMetadataProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera l'istanza di <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> per una determinata classe <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</returns>
      <param name="actionContext">Contesto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidatorProviders(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera la raccolta delle istanze di <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> registrate.</summary>
      <returns>Raccolta di istanze di <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</returns>
      <param name="actionContext">Contesto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidators(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Metadata.ModelMetadata)">
      <summary>Recupera la raccolta delle istanze di <see cref="T:System.Web.Http.Validation.ModelValidator" /> registrate. </summary>
      <returns>Raccolta delle istanze di <see cref="T:System.Web.Http.Validation.ModelValidator" /> registrate.</returns>
      <param name="actionContext">Contesto.</param>
      <param name="metadata">Metadati.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.TryBindStrongModel``1(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.String,System.Web.Http.Metadata.ModelMetadataProvider,``0@)">
      <summary>Associa il modello alla proprietà utilizzando il contesto di esecuzione e il contesto di associazione specificati.</summary>
      <returns>true se l'associazione ha esito positivo. In caso contrario, false.</returns>
      <param name="actionContext">Contesto di esecuzione.</param>
      <param name="parentBindingContext">Contesto di associazione del padre.</param>
      <param name="propertyName">Nome della proprietà da associare al modello.</param>
      <param name="metadataProvider">Provider di metadati per il modello.</param>
      <param name="model">Quando termina, questo metodo restituisce il modello associato.</param>
      <typeparam name="TModel">Tipo del modello.</typeparam>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionDescriptor">
      <summary>Fornisce informazioni sui metodi di azione.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> con le informazioni specificate che descrivono il controller dell'azione.</summary>
      <param name="controllerDescriptor">Informazioni che descrivono il controller dell'azione.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionBinding">
      <summary>Ottiene o imposta l'associazione che descrive l'azione.</summary>
      <returns>Associazione che descrive l'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionName">
      <summary>Ottiene il nome dell'azione.</summary>
      <returns>Nome dell'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Configuration">
      <summary>Ottiene o imposta la configurazione dell'azione.</summary>
      <returns>Configurazione dell'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ControllerDescriptor">
      <summary>Ottiene le informazioni che descrivono il controller dell'azione.</summary>
      <returns>Informazioni che descrivono il controller dell'azione.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Esegue l'azione descritta e restituisce un'istanza di <see cref="T:System.Threading.Tasks.Task`1" /> che, una volta completata, conterrà il valore restituito dell'azione.</summary>
      <returns>Istanza di <see cref="T:System.Threading.Tasks.Task`1" /> che, una volta completata, conterrà il valore restituito dell'azione.</returns>
      <param name="controllerContext">Contesto del controller.</param>
      <param name="arguments">Elenco di argomenti.</param>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1">
      <summary>Restituisce gli attributi personalizzati associati al descrittore dell'azione.</summary>
      <returns>Attributi personalizzati associati al descrittore dell'azione.</returns>
      <typeparam name="T">Descrittore dell'azione.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilterPipeline">
      <summary>Recupera i filtri per la configurazione e l'azione specificate.</summary>
      <returns>Filtri per la configurazione e l'azione specificate.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilters">
      <summary>Recupera i filtri per il descrittore dell'azione.</summary>
      <returns>Filtri per il descrittore dell'azione.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetParameters">
      <summary>Recupera i parametri per il descrittore dell'azione.</summary>
      <returns>Parametri per il descrittore dell'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Properties">
      <summary>Ottiene le proprietà associate a questa istanza.</summary>
      <returns>Proprietà associate a questa istanza.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ResultConverter">
      <summary>Ottiene il convertitore per la corretta trasformazione del risultato della chiamata di <see cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" /> in un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Convertitore del risultato dell'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ReturnType">
      <summary>Ottiene il tipo restituito del descrittore.</summary>
      <returns>Tipo restituito del descrittore.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.SupportedHttpMethods">
      <summary>Ottiene la raccolta dei metodi HTTP supportati per il descrittore.</summary>
      <returns>Raccolta dei metodi HTTP supportati per il descrittore.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerContext">
      <summary>Contiene informazioni per una singola operazione HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IHttpRouteData,System.Net.Http.HttpRequestMessage)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
      <param name="configuration">Configurazione.</param>
      <param name="routeData">Dati della route.</param>
      <param name="request">Richiesta.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Configuration">
      <summary>Ottiene o imposta la configurazione.</summary>
      <returns>Configurazione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Controller">
      <summary>Ottiene o imposta il controller HTTP.</summary>
      <returns>Controller HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.ControllerDescriptor">
      <summary>Ottiene o imposta il descrittore del controller.</summary>
      <returns>Descrittore del controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Request">
      <summary>Ottiene o imposta la richiesta.</summary>
      <returns>Richiesta.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RouteData">
      <summary>Ottiene o imposta i dati della route.</summary>
      <returns>Dati della route.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerDescriptor">
      <summary>Rappresenta informazioni che descrivono il controller HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor(System.Web.Http.HttpConfiguration,System.String,System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</summary>
      <param name="configuration">Configurazione.</param>
      <param name="controllerName">Nome del controller.</param>
      <param name="controllerType">Tipo di controller.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Configuration">
      <summary>Ottiene o imposta le configurazioni associate al controller.</summary>
      <returns>Configurazioni associate al controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerName">
      <summary>Ottiene o imposta il nome del controller.</summary>
      <returns>Nome del controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerType">
      <summary>Ottiene o imposta il tipo del controller.</summary>
      <returns>Tipo del controller.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(System.Net.Http.HttpRequestMessage)">
      <summary>Crea un'istanza di controller per l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> specificato.</summary>
      <returns>Istanza di controller creata.</returns>
      <param name="request">Messaggio di richiesta.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1">
      <summary>Recupera una raccolta di attributi personalizzati del controller.</summary>
      <returns>Raccolta di attributi personalizzati.</returns>
      <typeparam name="T">Tipo dell'oggetto.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetFilters">
      <summary>Restituisce una raccolta di filtri associata al controller.</summary>
      <returns>Raccolta di filtri associata al controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Properties">
      <summary>Ottiene le proprietà associate a questa istanza.</summary>
      <returns>Proprietà associate a questa istanza.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerSettings">
      <summary>Contiene le impostazioni per un controller HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerSettings.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpControllerSettings" />.</summary>
      <param name="configuration">Oggetto di configurazione utilizzato per inizializzare l'istanza.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Formatters">
      <summary>Ottiene la raccolta delle istanze di <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> per il controller.</summary>
      <returns>Raccolta di istanze di <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.ParameterBindingRules">
      <summary>Ottiene la raccolta delle funzioni di associazione di parametri per il controller.</summary>
      <returns>Raccolta delle funzioni di associazione di parametri.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Services">
      <summary>Ottiene la raccolta delle istanze di servizio per il controller.</summary>
      <returns>Raccolta di istanze di servizio.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterBinding">
      <summary> Descrive la modalità di associazione di un parametro. L'associazione deve essere statica (basata esclusivamente sul descrittore) e può essere condivisa da più richieste.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
      <param name="descriptor">
        <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> che descrive i parametri.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.Descriptor">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> utilizzato per l'inizializzazione di questa istanza.</summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.ErrorMessage">
      <summary>Se l'associazione non è valida, ottiene un messaggio di errore in cui viene descritto l'errore di associazione.</summary>
      <returns>Messaggio di errore. Se l'associazione ha avuto esito positivo, il valore è null.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono l'associazione per la richiesta specificata.</summary>
      <returns>Oggetto attività che rappresenta l'operazione asincrona.</returns>
      <param name="metadataProvider">Provider di metadati da utilizzare per la convalida.</param>
      <param name="actionContext">Contesto di azione per l'associazione. Il contesto dell'azione contiene il dizionario dei parametri che verrà popolato con il parametro.</param>
      <param name="cancellationToken">Token per l'annullamento dell'operazione di associazione.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.GetValue(System.Web.Http.Controllers.HttpActionContext)">
      <summary> Ottiene il valore del parametro dal dizionario degli argomenti del contesto dell'azione.</summary>
      <returns>Valore di questo parametro nel contesto dell'azione specificato oppure null se il parametro non è stato ancora impostato.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.IsValid">
      <summary>Ottiene un valore che indica se l'associazione ha avuto esito positivo.</summary>
      <returns>true se l'associazione ha avuto esito positivo. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.SetValue(System.Web.Http.Controllers.HttpActionContext,System.Object)">
      <summary>Imposta il risultato dell'associazione di parametri nel dizionario degli argomenti del contesto dell'azione.  </summary>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="value">Valore del parametro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.WillReadBody">
      <summary>Restituisce un valore che indica se questa istanza di <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> eseguirà la lettura del corpo entità del messaggio HTTP.</summary>
      <returns>true se questa istanza di <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> eseguirà la lettura del corpo entità. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterDescriptor">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ActionDescriptor">
      <summary>Ottiene o imposta il descrittore dell'azione.</summary>
      <returns>Descrittore dell'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Configuration">
      <summary>Ottiene o imposta la classe <see cref="T:System.Web.Http.HttpConfiguration" /> per <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <returns>Classe <see cref="T:System.Web.Http.HttpConfiguration" /> per <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.DefaultValue">
      <summary>Ottiene il valore predefinito del parametro.</summary>
      <returns>Valore predefinito del parametro.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Recupera una raccolta degli attributi personalizzati dal parametro.</summary>
      <returns>Raccolta degli attributi personalizzati recuperata dal parametro.</returns>
      <typeparam name="T">Tipo degli attributi personalizzati.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.IsOptional">
      <summary>Ottiene un valore che indica se il parametro è facoltativo.</summary>
      <returns>true se il parametro è facoltativo. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterBinderAttribute">
      <summary>Ottiene o imposta l'attributo dell'associazione di parametri.</summary>
      <returns>Attributo dell'associazione di parametri.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterName">
      <summary>Ottiene il nome del parametro.</summary>
      <returns>Nome del parametro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterType">
      <summary>Ottiene il tipo del parametro.</summary>
      <returns>Tipo del parametro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Prefix">
      <summary>Ottiene il prefisso del parametro.</summary>
      <returns>Prefisso del parametro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Properties">
      <summary>Ottiene le proprietà del parametro.</summary>
      <returns>Proprietà del parametro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionResultConverter">
      <summary> Contratto per una routine di conversione che può accettare il risultato di un'azione restituito da &lt;see cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" /&gt; e convertirlo in un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converte l'oggetto <see cref="T:System.Web.Http.Controllers.IActionResultConverter" /> specificato in un altro oggetto.</summary>
      <returns>Oggetto convertito.</returns>
      <param name="controllerContext">Contesto del controller.</param>
      <param name="actionResult">Risultato dell'azione.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionValueBinder">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />. </summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</returns>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IControllerConfiguration">
      <summary> Se un controller è dotato di un attributo nell'interfaccia corrente, viene richiamato per inizializzare le impostazioni del controller.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IControllerConfiguration.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Callback richiamato per impostare gli override eseguiti mediante controller per questo descrittore di controller. </summary>
      <param name="controllerSettings">Impostazioni del controller da inizializzare.</param>
      <param name="controllerDescriptor">Descrittore del controller. È possibile associare <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> al tipo di controller derivato, considerato che l'interfaccia <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> viene ereditata.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionInvoker">
      <summary>Contiene un metodo utilizzato per richiamare un'operazione HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono l'operazione HTTP.</summary>
      <returns>Nuova attività avviata.</returns>
      <param name="actionContext">Contesto di esecuzione.</param>
      <param name="cancellationToken">Token di annullamento assegnato per l'operazione HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionSelector">
      <summary>Contiene la logica per la selezione di un metodo di azione.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Restituisce una mappa, con una chiave definita dalla stringa di azione, di tutti gli oggetti <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> che possono essere selezionati dal selettore.  È principalmente chiamato da <see cref="T:System.Web.Http.Description.IApiExplorer" /> per individuare tutte le azioni possibili nel controller.</summary>
      <returns>Mappa di oggetti <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> che possono essere selezionati dal selettore oppure null se il selettore non ha un mapping ben definito di <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</returns>
      <param name="controllerDescriptor">Descrittore del controller.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Seleziona l'azione per il controller.</summary>
      <returns>Azione per il controller.</returns>
      <param name="controllerContext">Contesto del controller.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpController">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Esegue il controller per la sincronizzazione.</summary>
      <returns>Controller.</returns>
      <param name="controllerContext">Contesto corrente per un controller di test.</param>
      <param name="cancellationToken">Notifica che annulla l'operazione.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ParameterBindingExtensions">
      <summary>Definisce i metodi di estensione per <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindAsError(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Associa un parametro determinando un errore. </summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
      <param name="message">Messaggio di errore che descrive la causa dell'errore di associazione.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithAttribute(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ParameterBindingAttribute)">
      <summary>Associa il parametro come se questo disponesse dell'attributo specificato sulla dichiarazione.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Parametro per il quale fornire l'associazione.</param>
      <param name="attribute">Attributo che descrive l'associazione.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Associa un parametro mediante l'analisi del contenuto del corpo HTTP.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Associa un parametro mediante l'analisi del contenuto del corpo HTTP.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
      <param name="formatters">Elenco di formattatori che consente di selezionare un formattatore appropriato per la serializzazione del parametro in un oggetto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Associa un parametro mediante l'analisi del contenuto del corpo HTTP.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
      <param name="formatters">Elenco di formattatori che consente di selezionare un formattatore appropriato per la serializzazione del parametro in un oggetto.</param>
      <param name="bodyModelValidator">Validator del modello del corpo utilizzato per convalidare il parametro.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Net.Http.Formatting.MediaTypeFormatter[])">
      <summary>Associa un parametro mediante l'analisi del contenuto del corpo HTTP.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
      <param name="formatters">Elenco di formattatori che consente di selezionare un formattatore appropriato per la serializzazione del parametro in un oggetto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Associa il parametro mediante l'analisi della stringa di query.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Associa il parametro mediante l'analisi della stringa di query.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
      <param name="valueProviderFactories">Factory dei provider di valori che forniscono dati di parametri delle stringhe di query.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Associa il parametro mediante l'analisi della stringa di query.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
      <param name="binder">Strumento di associazione di modelli utilizzato per assemblare il parametro in un oggetto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Associa il parametro mediante l'analisi della stringa di query.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
      <param name="binder">Strumento di associazione di modelli utilizzato per assemblare il parametro in un oggetto.</param>
      <param name="valueProviderFactories">Factory dei provider di valori che forniscono dati di parametri delle stringhe di query.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ValueProviders.ValueProviderFactory[])">
      <summary>Associa il parametro mediante l'analisi della stringa di query.</summary>
      <returns>Oggetto di associazione di parametri HTTP.</returns>
      <param name="parameter">Descrittore del parametro da associare.</param>
      <param name="valueProviderFactories">Factory dei provider di valori che forniscono dati di parametri delle stringhe di query.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor">
      <summary>Rappresenta un metodo di azione sincrono o asincrono riflesso. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor,System.Reflection.MethodInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" /> utilizzando il descrittore e i dettagli del metodo specificati.</summary>
      <param name="controllerDescriptor">Descrittore del controller.</param>
      <param name="methodInfo">Informazioni sul metodo di azione.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionName">
      <summary>Ottiene il nome dell'azione.</summary>
      <returns>Nome dell'azione.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Esegue l'azione descritta e restituisce un'istanza di <see cref="T:System.Threading.Tasks.Task`1" /> che, una volta completata, conterrà il valore restituito dell'azione.</summary>
      <returns>Istanza di <see cref="T:System.Threading.Tasks.Task`1&quot;" /> che, una volta completata, conterrà il valore restituito dell'azione.</returns>
      <param name="controllerContext">Contesto.</param>
      <param name="arguments">Argomenti.</param>
      <param name="cancellationToken">Token per l'annullamento dell'azione.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetCustomAttributes``1">
      <summary>Restituisce una matrice di attributi personalizzati definiti per questo membro, identificati dal tipo.</summary>
      <returns>Matrice di attributi personalizzati o matrice vuota se non è presente alcun attributo personalizzato.</returns>
      <typeparam name="T">Tipo degli attributi personalizzati.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetFilters">
      <summary>Recupera le informazioni sui filtri azione.</summary>
      <returns>Informazioni sui filtri.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetParameters">
      <summary>Recupera i parametri del metodo di azione.</summary>
      <returns>Parametri del metodo di azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.MethodInfo">
      <summary>Ottiene o imposta le informazioni sul metodo di azione.</summary>
      <returns>Informazioni sul metodo di azione.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ReturnType">
      <summary>Ottiene il tipo restituito di questo metodo.</summary>
      <returns>Tipo restituito di questo metodo.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.SupportedHttpMethods">
      <summary>Ottiene o imposta i metodi http supportati.</summary>
      <returns>Metodi http supportati.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Reflection.ParameterInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />.</summary>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
      <param name="parameterInfo">Informazioni sul parametro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.DefaultValue">
      <summary>Ottiene il valore predefinito del parametro.</summary>
      <returns>Valore predefinito del parametro.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Recupera una raccolta degli attributi personalizzati dal parametro.</summary>
      <returns>Raccolta degli attributi personalizzati recuperata dal parametro.</returns>
      <typeparam name="T">Tipo degli attributi personalizzati.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.IsOptional">
      <summary>Ottiene un valore che indica se il parametro è facoltativo.</summary>
      <returns>true se il parametro è facoltativo. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterInfo">
      <summary>Ottiene o imposta le informazioni sul parametro.</summary>
      <returns>Informazioni sul parametro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterName">
      <summary>Ottiene il nome del parametro.</summary>
      <returns>Nome del parametro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterType">
      <summary>Ottiene il tipo del parametro.</summary>
      <returns>Tipo del parametro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ResponseMessageResultConverter">
      <summary>Rappresenta un convertitore per azioni che hanno <see cref="T:System.Net.Http.HttpResponseMessage" /> come tipo restituito. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converte un oggetto <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" /> in un altro oggetto.</summary>
      <returns>Oggetto convertito.</returns>
      <param name="controllerContext">Contesto del controller.</param>
      <param name="actionResult">Risultato dell'azione.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ServicesContainer">
      <summary>Classe astratta che fornisce un contenitore di servizi utilizzato da ASP.NET Web API.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ServicesContainer" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Add(System.Type,System.Object)">
      <summary> Aggiunge un servizio alla fine dell'elenco di servizi per il tipo specificato.  </summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="service">Istanza di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.AddRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Aggiunge i servizi della raccolta specificata alla fine dell'elenco di servizi per il tipo specificato. </summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="services">Servizi da aggiungere.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Clear(System.Type)">
      <summary> Rimuove tutte le istanze di servizio del tipo specificato.  </summary>
      <param name="serviceType">Tipo di servizio da eliminare dall'elenco di servizi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearMultiple(System.Type)">
      <summary>Rimuove tutte le istanze di un tipo di servizio a istanze multiple.</summary>
      <param name="serviceType">Tipo di servizio da rimuovere.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearSingle(System.Type)">
      <summary>Rimuove un tipo di servizio a istanza singola.</summary>
      <param name="serviceType">Tipo di servizio da rimuovere.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Dispose">
      <summary>Esegue le attività definite dall'applicazione relative alla liberazione, al rilascio o alla reimpostazione di risorse non gestite.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.FindIndex(System.Type,System.Predicate{System.Object})">
      <summary> Cerca un servizio che soddisfa le condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza. </summary>
      <returns>Indice in base zero della prima occorrenza se la ricerca del servizio ha esito positivo. In caso contrario, -1.</returns>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="match">Delegato che definisce le condizioni dell'elemento da cercare. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetService(System.Type)">
      <summary>Ottiene un'istanza di servizio di un tipo specificato.</summary>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServiceInstances(System.Type)">
      <summary>Ottiene un elenco modificabile di istanze di servizio di un tipo specificato.</summary>
      <returns>Elenco modificabile di istanze di servizio.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServices(System.Type)">
      <summary>Ottiene una raccolta di istanze di servizio di un tipo specificato.</summary>
      <returns>Raccolta di istanze di servizio.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Insert(System.Type,System.Int32,System.Object)">
      <summary> Inserisce un servizio nella raccolta in corrispondenza dell'indice specificato. </summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito il servizio. Se viene passato <see cref="F:System.Int32.MaxValue" />, l'elemento viene aggiunto alla fine.</param>
      <param name="service">Servizio da inserire.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.InsertRange(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Inserisce gli elementi della raccolta nell'elenco di servizi in corrispondenza dell'indice specificato. </summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="index">Indice in base zero in corrispondenza del quale devono essere inseriti i nuovi elementi. Se viene passato <see cref="F:System.Int32.MaxValue" />, gli elementi vengono aggiunti alla fine.</param>
      <param name="services">Raccolta di servizi da inserire.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.IsSingleService(System.Type)">
      <summary> Determina se il tipo di servizio deve essere recuperato mediante GetService o GetServices.  </summary>
      <returns>true se il servizio è a istanza singola. </returns>
      <param name="serviceType">Tipo di servizio su cui eseguire una query.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Remove(System.Type,System.Object)">
      <summary> Rimuove la prima occorrenza del servizio specificato dall'elenco di servizi per il tipo specificato. </summary>
      <returns>true se l'elemento è stato rimosso. In caso contrario, false.</returns>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="service">Istanza di servizio da rimuovere.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAll(System.Type,System.Predicate{System.Object})">
      <summary> Rimuove tutti gli elementi che soddisfano le condizioni definite dal predicato specificato. </summary>
      <returns>Numero di elementi rimossi dall'elenco.</returns>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="match">Delegato che definisce le condizioni degli elementi da rimuovere.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAt(System.Type,System.Int32)">
      <summary> Rimuove il servizio in corrispondenza dell'indice specificato. </summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="index">Indice in base zero del servizio da rimuovere.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Replace(System.Type,System.Object)">
      <summary> Sostituisce tutti i servizi esistenti del tipo specificato con l'istanza di servizio specificata. Può essere utilizzato per i servizi a istanza singola o a istanze multiple.  </summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="service">Istanza di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceMultiple(System.Type,System.Object)">
      <summary>Sostituisce tutte le istanze di un servizio a istanze multiple con una nuova istanza.</summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="service">Istanza di servizio che sostituirà i servizi correnti di questo tipo.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Sostituisce tutti i servizi esistenti del tipo specificato con le istanze di servizio specificate. </summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="services">Istanze di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceSingle(System.Type,System.Object)">
      <summary>Sostituisce un servizio a istanza singola di un tipo specificato.</summary>
      <param name="serviceType">Tipo di servizio. </param>
      <param name="service">Istanza di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ResetCache(System.Type)">
      <summary>Rimuove i valori memorizzati nella cache per un singolo tipo di servizio.</summary>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ValueResultConverter`1">
      <summary> Convertitore per la creazione di risposte da azioni che restituiscono un valore <paramref name="T" /> arbitrario. </summary>
      <typeparam name="T">Tipo restituito dichiarato di un'azione.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.ValueResultConverter`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converte il risultato di un'azione che ha <paramref name="T" /> come tipo restituito arbitrario in un'istanza di <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Nuovo oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> creato.</returns>
      <param name="controllerContext">Contesto del controller dell'azione.</param>
      <param name="actionResult">Risultato dell'esecuzione.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.VoidResultConverter">
      <summary>Rappresenta un convertitore per la creazione di una risposta da azioni che non restituiscono un valore.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Controllers.VoidResultConverter" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converte la risposta creata da azioni che non restituiscono un valore.</summary>
      <returns>Risposta convertita.</returns>
      <param name="controllerContext">Contesto del controller.</param>
      <param name="actionResult">Risultato dell'azione.</param>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyResolver">
      <summary>Rappresenta un contenitore dell'inserimento di dipendenze.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope">
      <summary> Avvia un ambito di risoluzione. </summary>
      <returns>Ambito di dipendenza.</returns>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyScope">
      <summary>Rappresenta un'interfaccia per l'intervallo delle dipendenze.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)">
      <summary>Recupera un servizio dall'ambito.</summary>
      <returns>Servizio recuperato.</returns>
      <param name="serviceType">Servizio da recuperare.</param>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)">
      <summary>Recupera una raccolta di servizi dall'ambito.</summary>
      <returns>Raccolta di servizi recuperata.</returns>
      <param name="serviceType">Raccolta di servizi da recuperare.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiDescription">
      <summary> Descrive un'API definita in base al percorso URI relativo e al metodo HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiDescription.#ctor">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ActionDescriptor">
      <summary> Ottiene o imposta il descrittore di azione che gestirà l'API. </summary>
      <returns> Descrittore di azione. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Documentation">
      <summary> Ottiene o imposta la documentazione relativa all'API. </summary>
      <returns> Documentazione. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.HttpMethod">
      <summary> Ottiene o imposta il metodo HTTP. </summary>
      <returns> Metodo HTTP. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ID">
      <summary> Ottiene l'ID. L'ID è univoco per ogni istanza di <see cref="T:System.Web.Http.HttpServer" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ParameterDescriptions">
      <summary> Ottiene le descrizioni dei parametri. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.RelativePath">
      <summary> Ottiene o imposta il percorso relativo. </summary>
      <returns> Percorso relativo. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Route">
      <summary> Ottiene o imposta la route registrata per l'API. </summary>
      <returns> Route. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedRequestBodyFormatters">
      <summary> Ottiene i formattatori del corpo della richiesta supportati. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedResponseFormatters">
      <summary> Ottiene i formattatori della risposta supportati. </summary>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorer">
      <summary> Esplora lo spazio URI del servizio in base a route, controller e azioni disponibili nel sistema. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <param name="configuration">Configurazione.</param>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions">
      <summary> Ottiene le descrizioni dell'API. Le descrizioni vengono inizializzate al primo accesso. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.DocumentationProvider">
      <summary> Ottiene o imposta il provider della documentazione. Il provider sarà responsabile della documentazione relativa all'API. </summary>
      <returns> Provider della documentazione. </returns>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.GetHttpMethodsSupportedByAction(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Ottiene una raccolta di metodi HTTP supportati dall'azione. Chiamato al momento dell'inizializzazione di <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>Raccolta di metodi HTTP supportati dall'azione.</returns>
      <param name="route">Route.</param>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreAction(System.String,System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Determina se l'azione deve essere considerata per la generazione di <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. Chiamato al momento dell'inizializzazione di <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>true se l'azione deve essere considerata per la generazione di <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. In caso contrario, false.</returns>
      <param name="actionVariableValue">Valore della variabile dell'azione dalla route.</param>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
      <param name="route">Route.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreController(System.String,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Determina se il controller deve essere considerato per la generazione di <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. Chiamato al momento dell'inizializzazione di <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>true se il controller deve essere considerato per la generazione di <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. In caso contrario, false.</returns>
      <param name="controllerVariableValue">Valore della variabile del controller dalla route.</param>
      <param name="controllerDescriptor">Descrittore del controller.</param>
      <param name="route">Route.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorerSettingsAttribute">
      <summary> È possibile utilizzare questo attributo sui controller e sulle azioni per influenzare il comportamento di <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorerSettingsAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Description.ApiExplorerSettingsAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorerSettingsAttribute.IgnoreApi">
      <summary> Ottiene o imposta un valore che indica se escludere il controller o l'azione dalle istanze di <see cref="T:System.Web.Http.Description.ApiDescription" /> generate da <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <returns>true se l'azione o il controller deve essere ignorato. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterDescription">
      <summary> Descrive un parametro sull'API definita dal percorso URI relativo e dal metodo HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiParameterDescription.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Description.ApiParameterDescription" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Documentation">
      <summary> Ottiene o imposta la documentazione. </summary>
      <returns> Documentazione. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Name">
      <summary> Ottiene o imposta il nome. </summary>
      <returns> Nome. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.ParameterDescriptor">
      <summary> Ottiene o imposta il descrittore del parametro. </summary>
      <returns> Descrittore del parametro. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Source">
      <summary> Ottiene o imposta l'origine del parametro. Può provenire dall'URI o dal corpo della richiesta o da altre origini. </summary>
      <returns> Origine. </returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterSource">
      <summary> Descrive l'origine del parametro. </summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromUri">
      <summary>Parametro proveniente dall'URI.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromBody">
      <summary>Parametro proveniente dal corpo.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.Unknown">
      <summary>La posizione è sconosciuta.</summary>
    </member>
    <member name="T:System.Web.Http.Description.IApiExplorer">
      <summary> Definisce l'interfaccia per ottenere una raccolta di <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.IApiExplorer.ApiDescriptions">
      <summary> Ottiene le descrizioni dell'API. </summary>
    </member>
    <member name="T:System.Web.Http.Description.IDocumentationProvider">
      <summary> Definisce il provider responsabile della documentazione relativa al servizio. </summary>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Ottiene la documentazione in base a <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />. </summary>
      <returns>Documentazione per il controller.</returns>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Ottiene la documentazione in base a <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />. </summary>
      <returns>Documentazione per il controller.</returns>
      <param name="parameterDescriptor">Descrittore del parametro.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver">
      <summary> Fornisce un'implementazione di <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> senza dipendenze esterne. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.GetAssemblies">
      <summary> Restituisce un elenco degli assembly disponibili per l'applicazione. </summary>
      <returns>&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt; di assembly.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator">
      <summary>Rappresenta un'implementazione predefinita di un'interfaccia <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />. È possibile registrare un'implementazione differente tramite <see cref="T:System.Web.Http.Services.DependencyResolver" />. Questa classe è ottimizzata per il caso in cui è presente un'istanza di <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> per ciascuna istanza di <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, ma è in grado di supportare anche scenari in cui sono presenti molte istanze di <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> per un'unica istanza di <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />. Nel secondo caso, la funzione di ricerca subisce un leggero rallentamento in quanto deve attraversare il dizionario <see cref="P:HttpControllerDescriptor.Properties" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary> Crea l'interfaccia <see cref="T:System.Web.Http.Controllers.IHttpController" /> specificata da <paramref name="controllerType" /> utilizzando la classe <paramref name="request" /> specificata.</summary>
      <returns>Istanza di tipo <paramref name="controllerType" />.</returns>
      <param name="request">Messaggio di richiesta.</param>
      <param name="controllerDescriptor">Descrittore del controller.</param>
      <param name="controllerType">Tipo del controller.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector">
      <summary>Rappresenta un'istanza di <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> predefinita per la scelta di un oggetto <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dato un oggetto <see cref="T:System.Net.Http.HttpRequestMessage" />. È possibile registrare un'implementazione differente tramite <see cref="P:System.Web.Http.HttpConfiguration.Services" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" />.</summary>
      <param name="configuration">Configurazione.</param>
    </member>
    <member name="F:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.ControllerSuffix">
      <summary>Specifica la stringa di suffisso nel nome del controller.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
      <summary>Restituisce una mappa, con una chiave definita dalla stringa di controller, di tutti gli oggetti <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> che possono essere selezionati dal selettore. </summary>
      <returns>Mappa di tutti gli oggetti <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> che possono essere selezionati dal selettore oppure null se il selettore non ha un mapping ben definito di <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <summary>Ottiene il nome del controller per l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> specificato.</summary>
      <returns>Nome del controller per l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> specificato.</returns>
      <param name="request">Messaggio di richiesta HTTP.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary>Seleziona la classe <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> per l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> specificato.</summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> per l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> specificato.</returns>
      <param name="request">Messaggio di richiesta HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver">
      <summary> Fornisce un'implementazione di <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> senza dipendenze esterne. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor(System.Predicate{System.Type})">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" /> utilizzando un predicato per filtrare i tipi di controller. </summary>
      <param name="predicate">Predicato.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Restituisce un elenco dei controller disponibili per l'applicazione. </summary>
      <returns>&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; di controller.</returns>
      <param name="assembliesResolver">Resolver degli assembly.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
      <summary>Ottiene un valore che indica se il tipo di resolver è un predicato di tipi di controller.</summary>
      <returns>true se il tipo di resolver è un predicato di tipi di controller. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpControllerDispatcher">
      <summary>Invia un'istanza di <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso a un'implementazione di <see cref="T:System.Web.Http.Controllers.IHttpController" /> per l'elaborazione.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> con la configurazione specificata.</summary>
      <param name="configuration">Configurazione HTTP.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.HttpControllerDispatcher.Configuration">
      <summary>Ottiene la configurazione HTTP.</summary>
      <returns>Configurazione HTTP.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Esegue l'allocazione della CPU per un'istanza <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso in un'interfaccia <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> rappresenta l'operazione in corso.</returns>
      <param name="request">Richiesta per cui eseguire l'allocazione della CPU.</param>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher">
      <summary> Questa classe costituisce il gestore di messaggi dell'endpoint predefinito che esamina l'interfaccia <see cref="T:System.Web.Http.Routing.IHttpRoute" /> della route corrispondente e sceglie il gestore di messaggi da chiamare. Se <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> è null, esegue la delega a <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" /> utilizzando gli oggetti <see cref="T:System.Web.Http.HttpConfiguration" /> e <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> forniti come gestore predefinito. </summary>
      <param name="configuration">Configurazione del server.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" /> utilizzando gli oggetti <see cref="T:System.Web.Http.HttpConfiguration" /> e <see cref="T:System.Net.Http.HttpMessageHandler" /> forniti. </summary>
      <param name="configuration">Configurazione del server.</param>
      <param name="defaultHandler">Gestore predefinito da utilizzare quando <see cref="T:System.Web.Http.Routing.IHttpRoute" /> non ha la proprietà <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" />.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Invia una richiesta HTTP come operazione asincrona.</summary>
      <returns>Oggetto attività che rappresenta l'operazione asincrona.</returns>
      <param name="request">Messaggio di richiesta HTTP da inviare.</param>
      <param name="cancellationToken">Token di annullamento per annullare l'operazione.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IAssembliesResolver">
      <summary> Fornisce un'astrazione per la gestione degli assembly di un'applicazione. È possibile registrare un'implementazione differente tramite <see cref="T:System.Web.Http.Services.DependencyResolver" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IAssembliesResolver.GetAssemblies">
      <summary> Restituisce un elenco degli assembly disponibili per l'applicazione. </summary>
      <returns>&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; di assembly.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerActivator">
      <summary>Definisce i metodi necessari per un'interfaccia <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary>Crea un oggetto <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Controllers.IHttpController" />.</returns>
      <param name="request">Richiesta di messaggio.</param>
      <param name="controllerDescriptor">Descrittore del controller HTTP.</param>
      <param name="controllerType">Tipo del controller.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerSelector">
      <summary> Definisce i metodi necessari per una factory di <see cref="T:System.Web.Http.Controllers.IHttpController" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
      <summary> Restituisce una mappa, con una chiave definita dalla stringa di controller, di tutti gli oggetti <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> che possono essere selezionati dal selettore.  È principalmente chiamato da <see cref="T:System.Web.Http.Description.IApiExplorer" /> per individuare tutti i controller possibili nel sistema. </summary>
      <returns>Mappa di tutti gli oggetti <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> che possono essere selezionati dal selettore oppure null se il selettore non ha un mapping ben definito di <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary> Seleziona la classe <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> per l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> specificato. </summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
      <param name="request">Messaggio di richiesta.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver">
      <summary> Fornisce un'astrazione per la gestione dei tipi di controller di un'applicazione. È possibile registrare un'implementazione differente tramite DependencyResolver.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Restituisce un elenco dei controller disponibili per l'applicazione. </summary>
      <returns>&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; di controller.</returns>
      <param name="assembliesResolver">Resolver per gli assembly non riusciti.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionDescriptorFilterProvider">
      <summary>Fornisce informazioni su un metodo di azione, ad esempio nome, controller, parametri, attributi e filtri.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.ActionDescriptorFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Restituisce i filtri associati al metodo di azione.</summary>
      <returns>Filtri associati al metodo di azione.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionFilterAttribute">
      <summary>Rappresenta la classe di base per tutti gli attributi del filtro dell'azione.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Viene eseguito dopo la chiamata del metodo di azione.</summary>
      <param name="actionExecutedContext">Contesto di esecuzione dell'azione.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Viene eseguito prima della chiamata del metodo di azione.</summary>
      <param name="actionContext">Contesto dell'azione.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.System#Web#Http#Filters#IActionFilter#ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Esegue il filtro azione in modalità asincrona.</summary>
      <returns>Nuova attività creata per l'operazione.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="cancellationToken">Token di annullamento assegnato per l'attività.</param>
      <param name="continuation">Funzione di delegato per la continuazione dopo la chiamata del metodo di azione.</param>
    </member>
    <member name="T:System.Web.Http.Filters.AuthorizationFilterAttribute">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Chiamato quando un processo richiede un'autorizzazione.</summary>
      <param name="actionContext">Contesto dell'azione che incapsula informazioni per l'utilizzo di <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.System#Web#Http#Filters#IAuthorizationFilter#ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Esegue il filtro di autorizzazione durante la sincronizzazione.</summary>
      <returns>Filtro di autorizzazione utilizzato durante la sincronizzazione.</returns>
      <param name="actionContext">Contesto dell'azione che incapsula informazioni per l'utilizzo di <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
      <param name="cancellationToken">Token per l'annullamento dell'operazione.</param>
      <param name="continuation">Continuazione dell'operazione.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ConfigurationFilterProvider">
      <summary>Rappresenta il provider di filtri di configurazione.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.ConfigurationFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Restituisce i filtri associati al metodo di configurazione.</summary>
      <returns>Filtri associati al metodo di configurazione.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ExceptionFilterAttribute">
      <summary>Rappresenta gli attributi per il filtro eccezioni.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.ExceptionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Genera l'evento di eccezione.</summary>
      <param name="actionExecutedContext">Contesto per l'azione.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.System#Web#Http#Filters#IExceptionFilter#ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Esegue il filtro eccezioni in modalità asincrona.</summary>
      <returns>Risultato dell'esecuzione.</returns>
      <param name="actionExecutedContext">Contesto per l'azione.</param>
      <param name="cancellationToken">Contesto di annullamento.</param>
    </member>
    <member name="T:System.Web.Http.Filters.FilterAttribute">
      <summary>Rappresenta la classe di base per gli attributi del filtro dell'azione.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.FilterAttribute.AllowMultiple">
      <summary>Ottiene un valore che indica se sono consentiti più filtri.</summary>
      <returns>true se sono consentiti più filtri. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterInfo">
      <summary>Fornisce informazioni sui filtri azione disponibili.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterInfo.#ctor(System.Web.Http.Filters.IFilter,System.Web.Http.Filters.FilterScope)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <param name="instance">Istanza di questa classe.</param>
      <param name="scope">Ambito di questa classe.</param>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Instance">
      <summary>Ottiene o imposta un'istanza di <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>
        <see cref="T:System.Web.Http.Filters.FilterInfo" />.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Scope">
      <summary>Ottiene o imposta l'ambito di <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>Ambito di FilterInfo.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterScope">
      <summary>Definisce valori che specificano l'ordine in cui vengono eseguiti i filtri nell'ambito di uno stesso tipo di filtro e ordine dei filtri.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Global">
      <summary>Specifica un'azione prima di Controller.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Controller">
      <summary>Specifica un ordine prima di Action e dopo Global.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Action">
      <summary>Specifica un ordine dopo Controller. </summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpActionExecutedContext">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />.</summary>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="exception">Eccezione.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.ActionContext">
      <summary>Ottiene o imposta il contesto dell'azione HTTP.</summary>
      <returns>Contesto dell'azione HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Exception">
      <summary>Ottiene o imposta l'eccezione generata durante l'esecuzione.</summary>
      <returns>Eccezione generata durante l'esecuzione.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Request">
      <summary>Ottiene l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> per il contesto.</summary>
      <returns>Oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> per il contesto.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Response">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> per il contesto.</summary>
      <returns>Oggetto <see cref="T:System.Net.Http.HttpResponseMessage" /> per il contesto.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpFilterCollection">
      <summary>Rappresenta una raccolta di filtri HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Filters.HttpFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Add(System.Web.Http.Filters.IFilter)">
      <summary>Aggiunge un elemento alla fine della raccolta.</summary>
      <param name="filter">Elemento da aggiungere alla raccolta.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Clear">
      <summary>Rimuove tutti gli elementi nella raccolta.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Contains(System.Web.Http.Filters.IFilter)">
      <summary>Determina se l'insieme contiene l'elemento specificato.</summary>
      <returns>true se la raccolta contiene l'elemento specificato. In caso contrario, false.</returns>
      <param name="filter">Elemento da verificare.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpFilterCollection.Count">
      <summary>Ottiene il numero di elementi nell'insieme.</summary>
      <returns>Numero di elementi contenuti nell'insieme.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.GetEnumerator">
      <summary>Ottiene un enumeratore che scorre la raccolta.</summary>
      <returns>Oggetto enumeratore che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Remove(System.Web.Http.Filters.IFilter)">
      <summary>Rimuove l'elemento specificato dalla raccolta.</summary>
      <param name="filter">Elemento da rimuovere dalla raccolta.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ottiene un enumeratore che scorre la raccolta.</summary>
      <returns>Oggetto enumeratore che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IActionFilter">
      <summary>Definisce i metodi utilizzati in un filtro dell'azione.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Esegue il filtro azione in modalità asincrona.</summary>
      <returns>Nuova attività creata per l'operazione.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="cancellationToken">Token di annullamento assegnato per l'attività.</param>
      <param name="continuation">Funzione di delegato per la continuazione dopo la chiamata del metodo di azione.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IAuthorizationFilter">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthorizationFilter.ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Esegue il filtro di autorizzazione da sincronizzare.</summary>
      <returns>Filtro di autorizzazione da sincronizzare.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="cancellationToken">Token di annullamento associato al filtro.</param>
      <param name="continuation">Continuazione.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IExceptionFilter">
      <summary>Definisce i metodi necessari per un filtro eccezioni.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IExceptionFilter.ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Esegue un filtro eccezioni asincrono.</summary>
      <returns>Filtro eccezioni asincrono.</returns>
      <param name="actionExecutedContext">Contesto di esecuzione dell'azione.</param>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IFilter">
      <summary>Specifica un componente sul lato server utilizzato dal sistema di indicizzazione per indicizzare documenti con il formato di file associato a IFilter.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.IFilter.AllowMultiple">
      <summary>Ottiene o imposta un valore che indica se è possibile specificare più istanze dell'attributo indicato per un singolo elemento del programma.</summary>
      <returns>true se è possibile specificare più istanze. In caso contrario, false. Il valore predefinito è false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IFilterProvider">
      <summary>Fornisce informazioni sui filtri.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Restituisce un'enumerazione di filtri.</summary>
      <returns>Enumerazione di filtri.</returns>
      <param name="configuration">Configurazione HTTP.</param>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.HttpPropertyKeys">
      <summary>Fornisce chiavi comuni per le proprietà archiviate in <see cref="P:System.Net.Http.HttpRequestMessage.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.ClientCertificateKey">
      <summary>Fornisce una chiave per il certificato client della richiesta.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DependencyScope">
      <summary> Fornisce una chiave per l'istanza di <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> associata alla richiesta.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DisposableRequestResourcesKey">
      <summary> Fornisce una chiave per la raccolta di risorse che devono essere eliminate al momento dell'eliminazione della richiesta. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpConfigurationKey">
      <summary> Fornisce una chiave per l'istanza di <see cref="T:System.Web.Http.HttpConfiguration" /> associata alla richiesta. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpRouteDataKey">
      <summary> Fornisce una chiave per l'istanza di <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> associata alla richiesta. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IncludeErrorDetailKey">
      <summary>Fornisce una chiave che indica se i dettagli dell'errore devono essere inclusi nella risposta relativa alla richiesta HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsLocalKey">
      <summary>Fornisce una chiave che indica se la richiesta ha origine da un indirizzo locale.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestCorrelationKey">
      <summary> Fornisce una chiave per l'istanza di <see cref="T:System.Guid" /> archiviata in <see cref="P:System.Net.Http.HttpRequestMessage.Properties" />. ID di correlazione per tale richiesta. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestQueryNameValuePairsKey">
      <summary>Fornisce una chiave per la stringa di query analizzata archiviata in <see cref="P:System.Net.Http.HttpRequestMessage.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RetrieveClientCertificateDelegateKey">
      <summary>Fornisce una chiave per un delegato in grado di recuperare il certificato client della richiesta.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.SynchronizationContextKey">
      <summary> Fornisce una chiave per l'istanza corrente di <see cref="T:System.Threading.SynchronizationContext" /> archiviata in <see cref="M:HttpRequestMessage.Properties" />. Se il metodo <see cref="M:SynchronizationContext.Current" /> è null, il contesto non viene archiviato. </summary>
    </member>
    <member name="T:System.Web.Http.Hosting.IHostBufferPolicySelector">
      <summary> Interfaccia per controllare l'utilizzo della memorizzazione di richieste e risposte nel buffer dell'host. Se un host fornisce il supporto per la memorizzazione di richieste e/o risposte nel buffer, può utilizzare questa interfaccia per determinare i criteri in base ai quali utilizzare la memorizzazione nel buffer.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Determina se l'host deve memorizzare nel buffer il corpo entità di <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>true se è necessario utilizzare la memorizzazione nel buffer. In caso contrario, è necessario utilizzare una richiesta inviata come flusso.</returns>
      <param name="hostContext">Contesto dell'host.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Determina se l'host deve memorizzare nel buffer il corpo entità di <see cref="T.System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>true se è necessario utilizzare la memorizzazione nel buffer. In caso contrario, è necessario utilizzare una risposta inviata come flusso.</returns>
      <param name="response">Messaggio di risposta HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadata">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.ModelMetadata" />.</summary>
      <param name="provider">Provider.</param>
      <param name="containerType">Tipo del contenitore.</param>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
      <param name="modelType">Tipo del modello.</param>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.AdditionalValues">
      <summary>Ottiene un dizionario che contiene metadati aggiuntivi sul modello.</summary>
      <returns>Dizionario che contiene metadati aggiuntivi sul modello.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ContainerType">
      <summary>Ottiene o imposta il tipo di contenitore per il modello.</summary>
      <returns>Tipo del contenitore per il modello.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Ottiene o imposta un valore che indica se le stringhe vuote di cui viene eseguito il postback nei form devono essere convertite in null.</summary>
      <returns>true se le stringhe vuote di cui viene eseguito il postback nei form devono essere convertite in null. In caso contrario, false. Il valore predefinito è true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Description">
      <summary>Ottiene o imposta la descrizione del modello.</summary>
      <returns>Descrizione del modello. Il valore predefinito è null.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetDisplayName">
      <summary>Ottiene il nome visualizzato per il modello.</summary>
      <returns>Nome visualizzato per il modello.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetValidators(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Ottiene un elenco di validator per il modello.</summary>
      <returns>Elenco di validator per il modello.</returns>
      <param name="validatorProviders">Provider di validator per il modello.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsComplexType">
      <summary>Ottiene o imposta un valore che indica se il modello è un tipo complesso.</summary>
      <returns>Valore che indica se il modello è considerato un tipo complesso.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsNullableValueType">
      <summary>Ottiene un valore che indica se il tipo è nullable.</summary>
      <returns>true se il tipo è nullable. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsReadOnly">
      <summary>Ottiene o imposta un valore che indica se il modello è di sola lettura.</summary>
      <returns>true se il modello è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Model">
      <summary>Ottiene il valore del modello.</summary>
      <returns>Il valore del modello può essere null.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ModelType">
      <summary>Ottiene il tipo del modello.</summary>
      <returns>Tipo del modello.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Properties">
      <summary>Ottiene una raccolta di oggetti metadati del modello che descrivono le proprietà del modello.</summary>
      <returns>Raccolta di oggetti metadati del modello che descrivono le proprietà del modello.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.PropertyName">
      <summary>Ottiene il nome della proprietà.</summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Provider">
      <summary>Ottiene o imposta il provider.</summary>
      <returns>Provider.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadataProvider">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Ottiene un oggetto ModelMetadata per ogni proprietà di un modello.</summary>
      <returns>Oggetto ModelMetadata per ogni proprietà di un modello.</returns>
      <param name="container">Contenitore.</param>
      <param name="containerType">Tipo del contenitore.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Ottiene i metadati per la proprietà specificata.</summary>
      <returns>Modello di metadati per la proprietà specificata.</returns>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
      <param name="containerType">Tipo del contenitore.</param>
      <param name="propertyName">Proprietà per cui ottenere il modello di metadati.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Ottiene i metadati per la funzione di accesso del modello e il tipo di modello specificati.</summary>
      <returns>Metadati.</returns>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
      <param name="modelType">Tipo del modello.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1">
      <summary>Fornisce una classe astratta per implementare un provider di metadati.</summary>
      <typeparam name="TModelMetadata">Tipo di metadati del modello.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Quando è sottoposto a override in una classe derivata, crea i metadati del modello per la proprietà utilizzando il prototipo specificato.</summary>
      <returns>Metadati del modello per la proprietà.</returns>
      <param name="prototype">Prototipo in base a cui vengono creati i metadati del modello.</param>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Quando è sottoposto a override in una classe derivata, crea i metadati del modello per la proprietà.</summary>
      <returns>Metadati del modello per la proprietà.</returns>
      <param name="attributes">Set di attributi.</param>
      <param name="containerType">Tipo del contenitore.</param>
      <param name="modelType">Tipo del modello.</param>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Recupera un elenco di proprietà per il modello.</summary>
      <returns>Elenco di proprietà del modello.</returns>
      <param name="container">Contenitore del modello.</param>
      <param name="containerType">Tipo del contenitore.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Recupera i metadati per la proprietà specificata utilizzando il tipo di contenitore e il nome della proprietà.</summary>
      <returns>Metadati per la proprietà specificata.</returns>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
      <param name="containerType">Tipo del contenitore.</param>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Restituisce i metadati per la proprietà specificata utilizzando il tipo del modello.</summary>
      <returns>Metadati per la proprietà specificata.</returns>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
      <param name="modelType">Tipo del contenitore.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes">
      <summary>Fornisce dati della cache del prototipo per <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Attributi che forniscono i dati per l'inizializzazione.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Ottiene o imposta l'attributo di visualizzazione dei metadati.</summary>
      <returns>Attributo di visualizzazione dei metadati.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Ottiene o imposta l'attributo del formato di visualizzazione dei metadati.</summary>
      <returns>Attributo del formato di visualizzazione dei metadati.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Ottiene o imposta l'attributo modificabile dei metadati.</summary>
      <returns>Attributo modificabile dei metadati.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Ottiene o imposta l'attributo di sola lettura dei metadati.</summary>
      <returns>Attributo di sola lettura dei metadati.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata">
      <summary>Fornisce un contenitore per metadati comuni, per la classe <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" /> di un modello dati.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />.</summary>
      <param name="prototype">Prototipo utilizzato per inizializzare i metadati del modello.</param>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />.</summary>
      <param name="provider">Provider di metadati.</param>
      <param name="containerType">Tipo del contenitore.</param>
      <param name="modelType">Tipo del modello.</param>
      <param name="propertyName">Nome della proprietà.</param>
      <param name="attributes">Attributi che forniscono i dati per l'inizializzazione.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Recupera un valore che indica se le stringhe vuote di cui viene eseguito il postback nei form devono essere convertite in null.</summary>
      <returns>true se le stringhe vuote di cui viene eseguito il postback nei form devono essere convertite in null. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Recupera la descrizione del modello.</summary>
      <returns>Descrizione del modello.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Recupera un valore che indica se il modello è di sola lettura.</summary>
      <returns>true se il modello è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
      <typeparam name="TPrototypeCache">Tipo di cache del prototipo.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <param name="prototype">Prototipo.</param>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <param name="provider">Provider.</param>
      <param name="containerType">Tipo del contenitore.</param>
      <param name="modelType">Tipo del modello.</param>
      <param name="propertyName">Nome della proprietà.</param>
      <param name="prototypeCache">Cache del prototipo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Indica se le stringhe vuote di cui viene eseguito il postback nei form devono essere calcolate e convertite in null.</summary>
      <returns>true se le stringhe vuote di cui viene eseguito il postback nei form devono essere calcolate e convertite in null. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeDescription">
      <summary>Indica il valore del calcolo.</summary>
      <returns>Valore del calcolo.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsComplexType">
      <summary>Ottiene un valore che indica se il modello è un tipo complesso.</summary>
      <returns>Valore che indica se il modello viene considerato un tipo complesso dal framework Web API.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Ottiene un valore che indica se il modello da calcolare è di sola lettura.</summary>
      <returns>true se il modello da calcolare è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Ottiene o imposta un valore che indica se le stringhe vuote di cui viene eseguito il postback nei form devono essere convertite in null.</summary>
      <returns>true se le stringhe vuote di cui viene eseguito il postback nei form devono essere convertite in null. In caso contrario, false. Il valore predefinito è true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.Description">
      <summary>Ottiene o imposta la descrizione del modello.</summary>
      <returns>Descrizione del modello.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsComplexType">
      <summary>Ottiene un valore che indica se il modello è un tipo complesso.</summary>
      <returns>Valore che indica se il modello viene considerato un tipo complesso dal framework Web API.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsReadOnly">
      <summary>Ottiene o imposta un valore che indica se il modello è di sola lettura.</summary>
      <returns>true se il modello è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.PrototypeCache">
      <summary>Ottiene o imposta un valore che indica se la cache del prototipo è in fase di aggiornamento.</summary>
      <returns>true se la cache del prototipo è in fase di aggiornamento. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider">
      <summary>Implementa il provider di metadati del modello predefinito.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Crea i metadati per la proprietà specificata in base al prototipo.</summary>
      <returns>Metadati della proprietà.</returns>
      <param name="prototype">Prototipo.</param>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Crea i metadati per la proprietà specificata.</summary>
      <returns>Metadati della proprietà.</returns>
      <param name="attributes">Attributi.</param>
      <param name="containerType">Tipo del contenitore.</param>
      <param name="modelType">Tipo del modello.</param>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.ModelMetadata,System.Func{System.Object})">
      <summary>Crea metadati in base al prototipo.</summary>
      <returns>Metadati.</returns>
      <param name="prototype">Prototipo di metadati del modello.</param>
      <param name="modelAccessor">Funzione di accesso del modello.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Crea un prototipo del provider di metadati di <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />.</summary>
      <returns>Prototipo del provider di metadati.</returns>
      <param name="attributes">Attributi.</param>
      <param name="containerType">Tipo del contenitore.</param>
      <param name="modelType">Tipo di modello.</param>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding">
      <summary>Rappresenta direttamente l'associazione al token di annullamento.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding" />.</summary>
      <param name="descriptor">Descrittore dell'associazione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Esegue l'associazione durante la sincronizzazione.</summary>
      <returns>Associazione durante la sincronizzazione.</returns>
      <param name="metadataProvider">Provider di metadati.</param>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="cancellationToken">Notifica successiva all'annullamento delle operazioni.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute">
      <summary>Rappresenta un attributo che richiama uno strumento di associazione di modelli personalizzato.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.GetBinder">
      <summary>Recupera lo strumento di associazione di modelli associato.</summary>
      <returns>Riferimento a un oggetto che implementa l'interfaccia <see cref="T:System.Web.Http.ModelBinding.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.DefaultActionValueBinder">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Implementazione predefinita dell'interfaccia <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />. Questa interfaccia costituisce il punto di ingresso principale per l'associazione di parametri dell'azione.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> associato a <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</returns>
      <param name="actionDescriptor">Descrittore dell'azione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetParameterBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ottiene l'oggetto <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> associato a <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> associato a <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</returns>
      <param name="parameter">Descrittore del parametro.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ErrorParameterBinding">
      <summary>Definisce un errore di associazione,</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ErrorParameterBinding" />.</summary>
      <param name="descriptor">Descrittore dell'errore.</param>
      <param name="message">Messaggio.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ErrorParameterBinding.ErrorMessage">
      <summary>Ottiene il messaggio di errore.</summary>
      <returns>Messaggio di errore.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Esegue il metodo di associazione durante la sincronizzazione.</summary>
      <param name="metadataProvider">Provider di metadati.</param>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="cancellationToken">Valore del token di annullamento.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormatterParameterBinding">
      <summary>Rappresenta l'associazione di parametri che eseguirà la lettura di contenuto dal corpo e richiamerà i formattatori.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <param name="descriptor">Descrittore.</param>
      <param name="formatters">Formattatore.</param>
      <param name="bodyModelValidator">Validator del modello del corpo.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.BodyModelValidator">
      <summary>Ottiene o imposta un'interfaccia per il validator del modello del corpo.</summary>
      <returns>Interfaccia per il validator del modello del corpo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.ErrorMessage">
      <summary>Ottiene il messaggio di errore.</summary>
      <returns>Messaggio di errore.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Esegue in modo asincrono l'associazione di <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <returns>Risultato dell'azione.</returns>
      <param name="metadataProvider">Provider di metadati.</param>
      <param name="actionContext">Contesto associato all'azione.</param>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.Formatters">
      <summary>Ottiene o imposta un oggetto enumerabile che rappresenta il formattatore per l'associazione di parametri.</summary>
      <returns>Oggetto enumerabile che rappresenta il formattatore per l'associazione di parametri.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Legge in modo asincrono il contenuto di <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <returns>Risultato dell'azione.</returns>
      <param name="request">Richiesta.</param>
      <param name="type">Tipo.</param>
      <param name="formatters">Formattatore.</param>
      <param name="formatterLogger">Logger del formato.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.WillReadBody">
      <summary>Ottiene un valore che indica se <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> eseguirà la lettura di contenuto dal corpo.</summary>
      <returns>True se <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> eseguirà la lettura di contenuto dal corpo. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormDataCollectionExtensions">
      <summary>Rappresenta le estensioni per la raccolta di dati del form.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection)">
      <summary>Legge le estensioni della raccolta con il tipo specificato.</summary>
      <returns>Estensioni della raccolta lette.</returns>
      <param name="formData">Dati del form.</param>
      <typeparam name="T">Tipo generico.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Legge le estensioni della raccolta con il tipo specificato.</summary>
      <returns>Estensioni della raccolta.</returns>
      <param name="formData">Dati del form.</param>
      <param name="modelName">Nome del modello.</param>
      <param name="requiredMemberSelector">Selettore dei membri obbligatori.</param>
      <param name="formatterLogger">Logger del formattatore.</param>
      <typeparam name="T">Tipo generico.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type)">
      <summary>Legge le estensioni della raccolta con il tipo specificato.</summary>
      <returns>Estensioni della raccolta con il tipo specificato.</returns>
      <param name="formData">Dati del form.</param>
      <param name="type">Tipo dell'oggetto.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Legge le estensioni della raccolta con il tipo e il nome del modello specificati.</summary>
      <returns>Estensioni della raccolta.</returns>
      <param name="formData">Dati del form.</param>
      <param name="type">Tipo dell'oggetto.</param>
      <param name="modelName">Nome del modello.</param>
      <param name="requiredMemberSelector">Selettore dei membri obbligatori.</param>
      <param name="formatterLogger">Logger del formattatore.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehavior">
      <summary>Enumera il comportamento dell'associazione HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Optional">
      <summary>Comportamento facoltativo dell'associazione.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Never">
      <summary>L'associazione HTTP non viene mai utilizzata.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Required">
      <summary>L'associazione HTTP è obbligatoria.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute">
      <summary>Fornisce una classe di base per gli attributi del comportamento dell'associazione di modelli.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.#ctor(System.Web.Http.ModelBinding.HttpBindingBehavior)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute" />.</summary>
      <param name="behavior">Comportamento.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.Behavior">
      <summary>Ottiene o imposta la categoria di comportamento.</summary>
      <returns>Categoria di comportamento.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.TypeId">
      <summary>Ottiene l'identificatore univoco per questo attributo.</summary>
      <returns>ID per questo attributo.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding">
      <summary>Il parametro viene associato alla richiesta.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding" />.</summary>
      <param name="descriptor">Descrittore del parametro.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Esegue l'associazione di parametri in modo asincrono.</summary>
      <returns>Parametro associato.</returns>
      <param name="metadataProvider">Provider di metadati.</param>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="cancellationToken">Token di annullamento.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IModelBinder">
      <summary>Definisce i metodi necessari per uno strumento di associazione di modelli.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa il modello a un valore utilizzando il contesto del controller e il contesto di associazione specificati.</summary>
      <returns>Valore associato.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IValueProviderParameterBinding">
      <summary>Rappresenta un provider di valori per l'associazione di parametri.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.IValueProviderParameterBinding.ValueProviderFactories">
      <summary>Ottiene le istanze di <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> utilizzate da questa associazione di parametri.</summary>
      <returns>Istanze di <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> utilizzate da questa associazione di parametri.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter">
      <summary>Rappresenta la classe <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> per la gestione di dati codificati negli URL di form HTML, definiti application/x-www-form-urlencoded.  </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.CanReadType(System.Type)">
      <summary> Determina se questa istanza di <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" /> può leggere oggetti con il parametro <paramref name="type" /> specificato. </summary>
      <returns>true se gli oggetti del tipo specificato possono essere letti. In caso contrario, false.</returns>
      <param name="type">Tipo di oggetto che verrà letto.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Legge dal flusso indicato un oggetto con il parametro <paramref name="type" /> specificato. Questo metodo viene chiamato durante la deserializzazione.</summary>
      <returns>Istanza di <see cref="T:System.Threading.Tasks.Task" /> il cui risultato sarà costituito dall'istanza di oggetto letta.</returns>
      <param name="type">Tipo di oggetto da leggere.</param>
      <param name="readStream">
        <see cref="T:System.IO.Stream" /> da cui eseguire la lettura.</param>
      <param name="content">Contenuto letto.</param>
      <param name="formatterLogger">
        <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> per la registrazione degli eventi.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderAttribute">
      <summary> Specificare che questo parametro utilizza uno strumento di associazione di modelli. È possibile facoltativamente definire lo specifico strumento di associazione di modelli e i provider di valore che determinano il comportamento di tale strumento.  Gli attributi derivati possono fornire impostazioni utili per lo strumento di associazione di modelli o il provider di valore.  </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />.</summary>
      <param name="binderType">Tipo di strumento di associazione di modelli.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
      <summary>Ottiene o imposta il tipo di strumento di associazione di modelli.</summary>
      <returns>Tipo di strumento di associazione di modelli. </returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Ottiene l'associazione per un parametro.</summary>
      <returns>Oggetto <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> contenente l'associazione.</returns>
      <param name="parameter">Parametro da associare.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary> Ottiene l'interfaccia IModelBinder per questo tipo. </summary>
      <returns> Strumento di associazione di modelli non null.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="modelType">Tipo di modello che lo strumento di associazione dovrà associare.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
      <summary>Ottiene il provider dello strumento di associazione di modelli.</summary>
      <returns>Istanza di <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</returns>
      <param name="configuration">Oggetto di configurazione <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary> Ottiene i provider di valori su cui si baserà lo strumento di associazione di modelli. </summary>
      <returns>Raccolta di istanze di <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="configuration">Oggetto di configurazione <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
      <summary>Ottiene o imposta il nome da considerare come nome di parametro durante l'associazione di modelli.</summary>
      <returns>Nome da considerare come nome di parametro.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
      <summary>Ottiene o imposta un valore che specifica se la verifica del prefisso deve essere eliminata.</summary>
      <returns>true se la verifica del prefisso deve essere eliminata. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderConfig">
      <summary>Fornisce un contenitore per la configurazione dello strumento di associazione di modelli.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ResourceClassKey">
      <summary>Ottiene o imposta il nome del file di risorse (chiave della classe) che contiene valori stringa localizzati.</summary>
      <returns>Nome del file di risorse (chiave della classe).</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.TypeConversionErrorMessageProvider">
      <summary>Ottiene o imposta il provider corrente per i messaggi di errore di conversione del tipo.</summary>
      <returns>Provider corrente per i messaggi di errore di conversione del tipo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ValueRequiredErrorMessageProvider">
      <summary>Ottiene o imposta il provider corrente per i messaggi di errore relativi a un valore obbligatorio.</summary>
      <returns>Provider di messaggi di errore.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderErrorMessageProvider">
      <summary>Fornisce un contenitore per il provider dei messaggi di errore dello strumento di associazione di modelli.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding">
      <summary> Descrive un parametro che viene associato tramite ModelBinding.   </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding" />.</summary>
      <param name="descriptor">Descrittore del parametro.</param>
      <param name="modelBinder">Strumento di associazione di modelli.</param>
      <param name="valueProviderFactories">Raccolta di factory del provider di valori.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.Binder">
      <summary>Ottiene il gestore di associazione del modello.</summary>
      <returns>Strumento di associazione di modelli.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Esegue l'associazione di parametri in modo asincrono tramite lo strumento di associazione di modelli.</summary>
      <returns>Attività segnalata quando l'associazione viene completata.</returns>
      <param name="metadataProvider">Provider di metadati da utilizzare per la convalida.</param>
      <param name="actionContext">Contesto di azione per l'associazione.</param>
      <param name="cancellationToken">Token assegnato a questa attività per l'annullamento dell'operazione di associazione.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ValueProviderFactories">
      <summary>Ottiene la raccolta di factory del provider di valori.</summary>
      <returns>Raccolta di factory del provider di valori.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderProvider">
      <summary>Fornisce una classe di base astratta per i provider dello strumento di associazione di modelli.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Trova uno strumento di associazione per il tipo specificato.</summary>
      <returns>Strumento di associazione che può tentare di associare questo tipo oppure null se lo strumento di associazione determina in modo statico che non potrà mai associare il tipo.</returns>
      <param name="configuration">Oggetto di configurazione.</param>
      <param name="modelType">Tipo del modello al quale eseguire l'associazione.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBindingContext">
      <summary>Fornisce il contesto nel quale funziona uno strumento di associazione di modelli.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor(System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />.</summary>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Ottiene o imposta un valore che indica se lo strumento di associazione deve utilizzare un prefisso vuoto.</summary>
      <returns>true se lo strumento di associazione deve utilizzare un prefisso vuoto. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.Model">
      <summary>Ottiene o imposta il modello.</summary>
      <returns>Modello.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelMetadata">
      <summary>Ottiene o imposta i metadati del modello.</summary>
      <returns>Metadati del modello.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelName">
      <summary>Ottiene o imposta il nome del modello.</summary>
      <returns>Nome del modello.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelState">
      <summary>Ottiene o imposta lo stato del modello.</summary>
      <returns>Stato del modello.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelType">
      <summary>Ottiene o imposta il tipo del modello.</summary>
      <returns>Tipo del modello.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.PropertyMetadata">
      <summary>Ottiene i metadati della proprietà.</summary>
      <returns>Metadati della proprietà.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValidationNode">
      <summary>Ottiene o imposta il nodo di convalida.</summary>
      <returns>Nodo di convalida.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValueProvider">
      <summary>Ottiene o imposta il provider di valori.</summary>
      <returns>Provider di valori.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelError">
      <summary>Rappresenta un errore che si verifica durante l'associazione del modello.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelError" /> utilizzando l'eccezione specificata.</summary>
      <param name="exception">Eccezione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelError" /> utilizzando l'eccezione e il messaggio di errore specificati.</summary>
      <param name="exception">Eccezione.</param>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelError" /> utilizzando il messaggio di errore specificato.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.ErrorMessage">
      <summary>Ottiene o imposta il messaggio di errore.</summary>
      <returns>Messaggio di errore.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.Exception">
      <summary>Ottiene o imposta l'oggetto eccezione.</summary>
      <returns>Oggetto eccezione.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelErrorCollection">
      <summary>Rappresenta una raccolta di istanze di <see cref="T:System.Web.Http.ModelBinding.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.Exception)">
      <summary>Aggiunge l'oggetto Exception specificato alla raccolta di errori del modello.</summary>
      <param name="exception">Eccezione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.String)">
      <summary>Aggiunge il messaggio di errore specificato alla raccolta di errori del modello.</summary>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelState">
      <summary>Incapsula lo stato di associazione del modello a una proprietà di un argomento del metodo di azione o all'argomento stesso.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelState.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Errors">
      <summary>Ottiene un oggetto <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" /> che contiene gli errori che si sono verificati durante l'associazione del modello.</summary>
      <returns>Errori di stato del modello.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Value">
      <summary>Ottiene un oggetto <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" /> che incapsula il valore associato durante l'associazione del modello.</summary>
      <returns>Valore di stato del modello.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelStateDictionary">
      <summary>Rappresenta lo stato di un tentativo di associazione di un form pubblicato a un metodo di azione che include informazioni di convalida.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> utilizzando i valori copiati dal dizionario di stato del modello specificato.</summary>
      <param name="dictionary">Dizionario.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Aggiunge l'elemento specificato al dizionario di stato del modello.</summary>
      <param name="item">Oggetto da aggiungere al dizionario di stato del modello.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.Http.ModelBinding.ModelState)">
      <summary>Aggiunge un elemento con la chiave e il valore specificati al dizionario di stato del modello.</summary>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="value">Valore dell'elemento da aggiungere.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Aggiunge l'errore del modello specificato alla raccolta di errori per il dizionario di stato del modello associato alla chiave specificata.</summary>
      <param name="key">Chiave.</param>
      <param name="exception">Eccezione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Aggiunge il messaggio di errore specificato alla raccolta di errori per il dizionario di stato del modello associato alla chiave specificata.</summary>
      <param name="key">Chiave.</param>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Clear">
      <summary>Rimuove tutti gli elementi dal dizionario di stato del modello.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Determina se il dizionario di stato del modello contiene un valore specifico.</summary>
      <returns>true se l'elemento viene trovato nel dizionario di stato del modello. In caso contrario, false.</returns>
      <param name="item">Oggetto da individuare nel dizionario di stato del modello.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Determina se il dizionario di stato del modello contiene la chiave specificata.</summary>
      <returns>true se il dizionario di stato del modello contiene la chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave da individuare nel dizionario di stato del modello.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState}[],System.Int32)">
      <summary>Copia gli elementi del dizionario di stato del modello in una matrice, iniziando da un indice specificato.</summary>
      <param name="array">Matrice. L'indicizzazione della matrice deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero della matrice a partire dal quale ha inizio la copia.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Count">
      <summary>Ottiene il numero di coppie chiave/valore nella raccolta.</summary>
      <returns>Numero di coppie chiave/valore nella raccolta.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.GetEnumerator">
      <summary>Restituisce un enumeratore che può essere utilizzato per scorrere la raccolta.</summary>
      <returns>Enumeratore che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>true se la raccolta è di sola lettura. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsValid">
      <summary>Ottiene un valore che indica se l'istanza del dizionario di stato del modello è valida.</summary>
      <returns>true se l'istanza è valida. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.IsValidField(System.String)">
      <summary>Determina se sono presenti oggetti <see cref="T:System.Web.Http.ModelBinding.ModelError" /> associati alla chiave specificata o con tale chiave come prefisso.</summary>
      <returns>true se il dizionario di stato del modello contiene un valore associato alla chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Item(System.String)">
      <summary>Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <returns>Elemento di stato del modello.</returns>
      <param name="key">Chiave.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Keys">
      <summary>Ottiene una raccolta contenente le chiavi presenti nel dizionario.</summary>
      <returns>Raccolta contenente le chiavi del dizionario di stato del modello.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Merge(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Copia i valori dall'oggetto <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> specificato nel dizionario, sovrascrivendo i valori esistenti, se le chiavi corrispondono.</summary>
      <param name="dictionary">Dizionario.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Rimuove la prima occorrenza dell'oggetto specificato dal dizionario di stato del modello.</summary>
      <returns>true se l'elemento è stato rimosso dal dizionario di stato del modello. In caso contrario, false. Questo metodo restituisce false anche se l'elemento non viene trovato nel dizionario di stato del modello.</returns>
      <param name="item">Oggetto da rimuovere dal dizionario di stato del modello.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.String)">
      <summary>Rimuove l'elemento con la chiave specificata dal dizionario di stato del modello.</summary>
      <returns>true se l'elemento è stato rimosso. In caso contrario, false. Questo metodo restituisce false anche se la chiave non viene trovata nel dizionario di stato del modello.</returns>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.Http.ValueProviders.ValueProviderResult)">
      <summary>Imposta il valore per la chiave specificata utilizzando il dizionario di provider di valori specificato.</summary>
      <param name="key">Chiave.</param>
      <param name="value">Valore.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che scorre una raccolta.</summary>
      <returns>Oggetto IEnumerator che può essere utilizzato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.Http.ModelBinding.ModelState@)">
      <summary>Tenta di ottenere il valore associato alla chiave specificata.</summary>
      <returns>true se l'oggetto contiene un elemento con la chiave specificata. In caso contrario, false.</returns>
      <param name="key">Chiave del valore da ottenere.</param>
      <param name="value">Valore associato alla chiave specificata.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Values">
      <summary>Ottiene una raccolta contenente i valori presenti nel dizionario.</summary>
      <returns>Raccolta contenente i valori del dizionario di stato del modello.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection">
      <summary> Raccolta di funzioni in grado di generare un'associazione per un parametro specificato.    </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Add(System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Aggiunge una funzione alla fine della raccolta.  La funzione aggiunta rappresenta un wrapper per funcInner che verifica se parameterType corrisponde a typeMatch. </summary>
      <param name="typeMatch">Tipo di cui stabilire la corrispondenza con HttpParameterDescriptor.ParameterType.</param>
      <param name="funcInner">Funzione interna richiamata se la corrispondenza del tipo ha esito positivo.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Insert(System.Int32,System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Inserire una funzione in corrispondenza dell'indice specificato nella raccolta. /// La funzione aggiunta rappresenta un wrapper per funcInner che verifica se parameterType corrisponde a typeMatch. </summary>
      <param name="index">Indice in corrispondenza del quale effettuare l'inserimento.</param>
      <param name="typeMatch">Tipo di cui stabilire la corrispondenza con HttpParameterDescriptor.ParameterType.</param>
      <param name="funcInner">Funzione interna richiamata se la corrispondenza del tipo ha esito positivo.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.LookupBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Eseguire in ordine ciascuna funzione di associazione fino a quando una di tali funzioni non restituisce un'associazione non null.  </summary>
      <returns>Prima associazione non null generata per il parametro. null se non viene generata alcuna associazione.</returns>
      <param name="parameter">Parametro da associare.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1">
      <summary>Esegue il mapping di una richiesta del browser a una matrice.</summary>
      <typeparam name="TElement">Tipo della matrice.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Indica se il modello è associato.</summary>
      <returns>true se il modello specificato è associato. In caso contrario, false.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Converte la raccolta in una matrice.</summary>
      <returns>true in tutti i casi.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
      <param name="newCollection">Nuova raccolta.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider">
      <summary>Fornisce uno strumento di associazione di modelli per matrici.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Restituisce uno strumento di associazione di modelli per matrici.</summary>
      <returns>Un oggetto strumento di associazione di modelli oppure null se il tentativo di ottenere uno strumento di associazione di modelli ha esito negativo.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="modelType">Tipo di modello.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1">
      <summary>Esegue il mapping di una richiesta del browser a una raccolta.</summary>
      <typeparam name="TElement">Tipo della raccolta.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa il modello utilizzando il contesto di esecuzione e il contesto di associazione specificati.</summary>
      <returns>true se l'associazione del modello ha esito positivo. In caso contrario, false.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Consente alle classi derivate di modificare la raccolta prima che questa venga restituita dallo strumento di associazione.</summary>
      <returns>true in tutti i casi.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
      <param name="newCollection">Nuova raccolta.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider">
      <summary>Fornisce uno strumento di associazione di modelli per una raccolta.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera uno strumento di associazione di modelli per una raccolta.</summary>
      <returns>Strumento di associazione di modelli.</returns>
      <param name="configuration">Configurazione del modello.</param>
      <param name="modelType">Tipo del modello.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto">
      <summary>Rappresenta un oggetto DTO (Data Transfer Object) per un modello complesso.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDto.#ctor(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Metadata.ModelMetadata})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <param name="modelMetadata">Metadati del modello.</param>
      <param name="propertyMetadata">Raccolta di metadati di proprietà.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.ModelMetadata">
      <summary>Ottiene o imposta i metadati del modello di <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Metadati del modello di <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.PropertyMetadata">
      <summary>Ottiene o imposta la raccolta di metadati di proprietà di <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Raccolta di metadati di proprietà di <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.Results">
      <summary>Ottiene o imposta i risultati di <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Risultati di <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder">
      <summary>Rappresenta uno strumento di associazione di modelli per un oggetto <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Determina se il modello specificato è associato.</summary>
      <returns>true se il modello specificato è associato. In caso contrario, false.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider">
      <summary>Rappresenta un modello complesso che richiama un provider dello strumento di associazione di modelli.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera lo strumento di associazione di modelli associato.</summary>
      <returns>Strumento di associazione di modelli.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="modelType">Tipo del modello da recuperare.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult">
      <summary>Rappresenta il risultato per l'oggetto <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.#ctor(System.Object,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult" />.</summary>
      <param name="model">Modello di oggetti.</param>
      <param name="validationNode">Nodo di convalida.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.Model">
      <summary>Ottiene o imposta il modello per questo oggetto.</summary>
      <returns>Modello per questo oggetto.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.ValidationNode">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> per questo oggetto.</summary>
      <returns>
        <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> per questo oggetto.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder">
      <summary>Rappresenta un'interfaccia <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> per la delega a un elemento di una raccolta di istanze di <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />.</summary>
      <param name="binders">Enumerazione di strumenti di associazione di modelli.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Web.Http.ModelBinding.IModelBinder[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />.</summary>
      <param name="binders">Matrice di strumenti di associazione di modelli.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Indica se il modello specificato è associato.</summary>
      <returns>true se il modello è associato. In caso contrario, false.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider">
      <summary>Rappresenta la classe dei provider degli strumenti di associazione di modelli composti.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.ModelBinderProvider})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />.</summary>
      <param name="providers">Raccolta di <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Ottiene lo strumento di associazione per il modello.</summary>
      <returns>Strumento di associazione per il modello.</returns>
      <param name="configuration">Configurazione del modello di associazione.</param>
      <param name="modelType">Tipo del modello.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.Providers">
      <summary>Ottiene i provider per lo strumento associazione di modelli composto.</summary>
      <returns>Raccolta di provider.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2">
      <summary>Esegue il mapping di una richiesta del browser a un oggetto dati dizionario.</summary>
      <typeparam name="TKey">Tipo della chiave.</typeparam>
      <typeparam name="TValue">Tipo del valore.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <summary>Converte la raccolta in un dizionario.</summary>
      <returns>true in tutti i casi.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
      <param name="newCollection">Nuova raccolta.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider">
      <summary>Fornisce uno strumento di associazione di modelli per un dizionario.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera lo strumento di associazione di modelli associato.</summary>
      <returns>Strumento di associazione di modelli associato.</returns>
      <param name="configuration">Configurazione da utilizzare.</param>
      <param name="modelType">Tipo di modello.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2">
      <summary>Esegue il mapping di una richiesta del browser a un oggetto dati costituito da una coppia chiave/valore.</summary>
      <typeparam name="TKey">Tipo della chiave.</typeparam>
      <typeparam name="TValue">Tipo del valore.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa il modello utilizzando il contesto di esecuzione e il contesto di associazione specificati.</summary>
      <returns>true se l'associazione del modello ha esito positivo. In caso contrario, false.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider">
      <summary>Fornisce uno strumento di associazione di modelli per una raccolta di coppie chiave/valore.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera lo strumento di associazione di modelli associato.</summary>
      <returns>Strumento di associazione di modelli associato.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="modelType">Tipo di modello.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder">
      <summary>Esegue il mapping di una richiesta del browser a un oggetto dati modificabile.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa il modello utilizzando il contesto dell'azione e il contesto di associazione specificati.</summary>
      <returns>true se l'associazione ha esito positivo. In caso contrario, false.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CanUpdateProperty(System.Web.Http.Metadata.ModelMetadata)">
      <summary>Recupera un valore che indica se una proprietà può essere aggiornata.</summary>
      <returns>true se la proprietà può essere aggiornata. In caso contrario, false.</returns>
      <param name="propertyMetadata">Metadati per la proprietà da valutare.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CreateModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Crea un'istanza del modello.</summary>
      <returns>Nuovo oggetto modello creato.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.EnsureModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Crea un'istanza del modello se non ne è ancora presente una nel contesto di associazione.</summary>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.GetMetadataForProperties(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Recupera i metadati per le proprietà del modello.</summary>
      <returns>Metadati per le proprietà del modello.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.SetProperty(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Web.Http.Metadata.ModelMetadata,System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult,System.Web.Http.Validation.ModelValidator)">
      <summary>Imposta il valore di una proprietà specificata.</summary>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
      <param name="propertyMetadata">Metadati per la proprietà da impostare.</param>
      <param name="dtoResult">Informazioni di convalida relative alla proprietà.</param>
      <param name="requiredValidator">Validator per il modello.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider">
      <summary>Fornisce uno strumento di associazione di modelli per oggetti modificabili.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera il gestore di associazione del modello per il tipo specificato.</summary>
      <returns>Strumento di associazione di modelli.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="modelType">Tipo del modello da recuperare.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Func{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" />.</summary>
      <param name="modelType">Tipo di modello.</param>
      <param name="modelBinderFactory">Factory dello strumento di associazione di modelli.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" /> utilizzando il tipo di modello e lo strumento di associazione di modelli specificati.</summary>
      <param name="modelType">Tipo di modello.</param>
      <param name="modelBinder">Strumento di associazione di modelli.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Restituisce uno strumento di associazione di modelli utilizzando il contesto di esecuzione e il contesto di associazione specificati.</summary>
      <returns>Lo strumento di associazione di modelli oppure null se il tentativo di ottenere uno strumento di questo tipo ha esito negativo.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="modelType">Tipo di modello.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.ModelType">
      <summary>Ottiene il tipo del modello.</summary>
      <returns>Tipo del modello.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.SuppressPrefixCheck">
      <summary>Ottiene o imposta un valore che specifica se la verifica del prefisso deve essere eliminata.</summary>
      <returns>true se la verifica del prefisso deve essere eliminata. In caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder">
      <summary>Esegue il mapping di una richiesta del browser a un oggetto dati. Questo tipo viene utilizzato quando l'associazione del modello richiede l'esecuzione di conversioni mediante un convertitore di tipi .NET Framework.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa il modello utilizzando il contesto del controller e il contesto di associazione specificati.</summary>
      <returns>true se l'associazione del modello ha esito positivo. In caso contrario, false.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider">
      <summary>Fornisce uno strumento di associazione di modelli per un modello che richiede la conversione del tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera uno strumento di associazione di modelli per un modello che richiede la conversione del tipo.</summary>
      <returns>Lo strumento di associazione di modelli oppure Nothing se il tipo non può essere convertito o non è presente alcun valore da convertire.</returns>
      <param name="configuration">Configurazione dello strumento di associazione.</param>
      <param name="modelType">Tipo del modello.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder">
      <summary>Esegue il mapping di una richiesta del browser a un oggetto dati. Questa classe viene utilizzata quando l'associazione del modello non richiede la conversione del tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa il modello utilizzando il contesto di esecuzione e il contesto di associazione specificati.</summary>
      <returns>true se l'associazione del modello ha esito positivo. In caso contrario, false.</returns>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="bindingContext">Contesto di associazione.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider">
      <summary>Fornisce uno strumento di associazione di modelli per un modello che non richiede la conversione del tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera lo strumento di associazione di modelli associato.</summary>
      <returns>Strumento di associazione di modelli associato.</returns>
      <param name="configuration">Configurazione.</param>
      <param name="modelType">Tipo di modello.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpMethodConstraint">
      <summary>Consente di definire i verbi HTTP consentiti quando il routing ASP.NET determina se un URL corrisponde a una route.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.#ctor(System.Net.Http.HttpMethod[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpMethodConstraint" /> utilizzando i verbi HTTP consentiti per la route.</summary>
      <param name="allowedMethods">Verbi HTTP validi per la route.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpMethodConstraint.AllowedMethods">
      <summary>Ottiene o imposta la raccolta dei verbi HTTP consentiti per la route.</summary>
      <returns>Raccolta dei verbi HTTP consentiti per la route.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se la richiesta è stata effettuata con un verbo HTTP incluso tra quelli consenti per la route.</summary>
      <returns>Quando viene elaborata una richiesta: true se la richiesta è stata effettuata utilizzando un verbo HTTP consentito. In caso contrario, false. Quando viene generato un URL: true se i valori forniti contengono un verbo HTTP corrispondente a uno di quelli consentiti. In caso contrario, false. Il valore predefinito è true.</returns>
      <param name="request">Richiesta verificata per determinare se corrisponde all'URL.</param>
      <param name="route">Oggetto verificato per determinare se corrisponde all'URL.</param>
      <param name="parameterName">Nome del parametro verificato.</param>
      <param name="values">Oggetto contenente i parametri per una route.</param>
      <param name="routeDirection">Oggetto che indica se la verifica del vincolo viene eseguita al momento dell'elaborazione di una richiesta in ingresso o della generazione di un URL.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.System#Web#Http#Routing#IHttpRouteConstraint#Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se la richiesta è stata effettuata con un verbo HTTP incluso tra quelli consenti per la route.</summary>
      <returns>Quando viene elaborata una richiesta: true se la richiesta è stata effettuata utilizzando un verbo HTTP consentito. In caso contrario, false. Quando viene generato un URL: true se i valori forniti contengono un verbo HTTP corrispondente a uno di quelli consentiti. In caso contrario, false. Il valore predefinito è true.</returns>
      <param name="request">Richiesta verificata per determinare se corrisponde all'URL.</param>
      <param name="route">Oggetto verificato per determinare se corrisponde all'URL.</param>
      <param name="parameterName">Nome del parametro verificato.</param>
      <param name="values">Oggetto contenente i parametri per una route.</param>
      <param name="routeDirection">Oggetto che indica se la verifica del vincolo viene eseguita al momento dell'elaborazione di una richiesta in ingresso o della generazione di un URL.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRoute">
      <summary>Rappresenta una classe di route per l'hosting all'esterno di ASP.NET (self-hosting).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Modello di route.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Modello di route.</param>
      <param name="defaults">Valori predefiniti per i parametri di route.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Modello di route.</param>
      <param name="defaults">Valori predefiniti per i parametri di route.</param>
      <param name="constraints">Vincoli per i parametri di route.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Modello di route.</param>
      <param name="defaults">Valori predefiniti per i parametri di route.</param>
      <param name="constraints">Vincoli per i parametri di route.</param>
      <param name="dataTokens">Token aggiuntivi per i parametri di route.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Modello di route.</param>
      <param name="defaults">Valori predefiniti per i parametri di route.</param>
      <param name="constraints">Vincoli per i parametri di route.</param>
      <param name="dataTokens">Token aggiuntivi per i parametri di route.</param>
      <param name="handler">Gestore di messaggi che costituirà il destinatario della richiesta.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Constraints">
      <summary>Ottiene i vincoli per i parametri di route.</summary>
      <returns>Vincoli per i parametri di route.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.DataTokens">
      <summary>Ottiene token di dati aggiuntivi non utilizzati direttamente per determinare se una route corrisponde a un oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso.</summary>
      <returns>Token di dati aggiuntivi non utilizzati direttamente per determinare se una route corrisponde a un oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Defaults">
      <summary>Ottiene i valori predefiniti per i parametri di route se non sono specificati dall'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso.</summary>
      <returns>Valori predefiniti per i parametri di route se non sono specificati dall'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary>Determina se questa route corrisponde alla richiesta in ingresso effettuando una ricerca nell'istanza di <see cref="T:System.Web.Http.Routing.HttpRouteData" /> relativa alla route.</summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Routing.HttpRouteData" /> per una route se viene stabilita una corrispondenza. In caso contrario, null.</returns>
      <param name="virtualPathRoot">Radice del percorso virtuale.</param>
      <param name="request">Richiesta HTTP.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Tenta di generare un URI che rappresenti i valori che sono stati passati, in base ai valori correnti di <see cref="T:System.Web.Http.Routing.HttpRouteData" /> e a nuovi valori, utilizzando l'istanza di <see cref="T:System.Web.Http.Routing.HttpRoute" /> specificata.</summary>
      <returns>Istanza di <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" /> oppure null se l'URI non può essere generato.</returns>
      <param name="request">Messaggio di richiesta HTTP.</param>
      <param name="values">Valori della route.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Handler">
      <summary>Ottiene o imposta il gestore di route HTTP.</summary>
      <returns>Gestore di route HTTP.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.ProcessConstraint(System.Net.Http.HttpRequestMessage,System.Object,System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se questa istanza è uguale a una route specificata.</summary>
      <returns>true se l'istanza è uguale a una route specificata. In caso contrario, false.</returns>
      <param name="request">Richiesta HTTP.</param>
      <param name="constraint">Vincoli per i parametri di route.</param>
      <param name="parameterName">Nome del parametro.</param>
      <param name="values">Elenco di valori di parametro.</param>
      <param name="routeDirection">Uno dei valori dell'enumerazione <see cref="System.Web.Http.Routing.HttpRouteDirection" />.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.RouteTemplate">
      <summary>Ottiene il modello di route che descrive il modello di URI in base al quale stabilire la corrispondenza.</summary>
      <returns>Modello di route che descrive il modello di URI in base al quale stabilire la corrispondenza.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteData">
      <summary>Incapsula informazioni sulla route HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRouteData" />.</summary>
      <param name="route">Oggetto che definisce la route.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRouteData" />.</summary>
      <param name="route">Oggetto che definisce la route.</param>
      <param name="values">Valore.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Route">
      <summary>Ottiene l'oggetto che rappresenta la route.</summary>
      <returns>Oggetto che rappresenta la route.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Values">
      <summary>Ottiene una raccolta di valori di parametro relativi all'URL e di valori predefiniti per la route.</summary>
      <returns>Oggetto contenente valori che vengono analizzati in base all'URL e ai valori predefiniti.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDirection">
      <summary>Specifica un'enumerazione della direzione della route.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriResolution">
      <summary>Direzione di UriResolution.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriGeneration">
      <summary>Direzione di UriGeneration.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteValueDictionary">
      <summary>Rappresenta una classe di route per l'hosting indipendente di coppie chiave/valore specificate.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
      <param name="dictionary">Dizionario.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
      <param name="values">Valore della chiave.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpVirtualPathData">
      <summary>Presenta i dati relativi al percorso virtuale HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpVirtualPathData.#ctor(System.Web.Http.Routing.IHttpRoute,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" />.</summary>
      <param name="route">Route del percorso virtuale.</param>
      <param name="virtualPath">URL creato a partire dalla definizione route.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.Route">
      <summary>Ottiene o imposta la route del percorso virtuale.</summary>
      <returns>Route del percorso virtuale.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.VirtualPath">
      <summary>Ottiene o imposta l'URL creato a partire dalla definizione route.</summary>
      <returns>URL creato a partire dalla definizione route.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRoute">
      <summary>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> definisce l'interfaccia per una route che indica come mappare un oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso a un controller e a un'azione specifici. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Constraints">
      <summary> Ottiene i vincoli per i parametri di route. </summary>
      <returns>Vincoli per i parametri di route.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.DataTokens">
      <summary> Ottiene token di dati aggiuntivi non utilizzati direttamente per determinare se una route corrisponde a un oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso. </summary>
      <returns>Token di dati aggiuntivi.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Defaults">
      <summary> Ottiene i valori predefiniti per i parametri di route se non sono specificati dall'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> in ingresso. </summary>
      <returns>Valori predefiniti per i parametri di route.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary> Determinare se questa route corrisponde alla richiesta in ingresso effettuando una ricerca nell'istanza di &lt;see cref="!:IRouteData" /&gt; relativa alla route. </summary>
      <returns>&lt;see cref="!:RouteData" /&gt; per una route se viene stabilita una corrispondenza. In caso contrario, null.</returns>
      <param name="virtualPathRoot">Radice del percorso virtuale.</param>
      <param name="request">Richiesta.</param>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ottiene i dati del percorso virtuale in base alla route e ai valori specificati.</summary>
      <returns>Dati del percorso virtuale.</returns>
      <param name="request">Messaggio di richiesta.</param>
      <param name="values">Valori.</param>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Handler">
      <summary>Ottiene il gestore di messaggi che costituirà il destinatario della richiesta.</summary>
      <returns>Gestore di messaggi.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.RouteTemplate">
      <summary> Ottiene il modello di route che descrive il modello di URI in base al quale stabilire la corrispondenza.  </summary>
      <returns>Modello di route.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteConstraint">
      <summary>Rappresenta un vincolo della route di una classe di base.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se questa istanza è uguale a una route specificata.</summary>
      <returns>True se l'istanza è uguale a una route specificata. In caso contrario, false.</returns>
      <param name="request">Richiesta.</param>
      <param name="route">Route da confrontare.</param>
      <param name="parameterName">Nome del parametro.</param>
      <param name="values">Elenco di valori di parametro.</param>
      <param name="routeDirection">Direzione della route.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteData">
      <summary>Fornisce informazioni su una route.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Route">
      <summary>Ottiene l'oggetto che rappresenta la route.</summary>
      <returns>Oggetto che rappresenta la route.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Values">
      <summary>Ottiene una raccolta di valori di parametro relativi all'URL e di valori predefiniti per la route.</summary>
      <returns>Valori analizzati provenienti dall'URL e da valori predefiniti.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpVirtualPathData">
      <summary>Definisce le proprietà della route HTTP.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.Route">
      <summary>Ottiene la route HTTP.</summary>
      <returns>Route HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.VirtualPath">
      <summary>Ottiene l'URI che rappresenta il percorso virtuale della route HTTP corrente.</summary>
      <returns>URI che rappresenta il percorso virtuale della route HTTP corrente.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.UrlHelper">
      <summary>Nessun aggiornamento previsto per questa sezione. Non aggiungere contenuto.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <param name="request">Richiesta HTTP per l'istanza.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce un collegamento per la route specificata.</summary>
      <returns>Collegamento per la route specificata.</returns>
      <param name="routeName">Nome della route.</param>
      <param name="routeValues">Oggetto contenente i parametri per una route.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Object)">
      <summary>Restituisce un collegamento per la route specificata.</summary>
      <returns>Collegamento per la route specificata.</returns>
      <param name="routeName">Nome della route.</param>
      <param name="routeValues">Valore della route.</param>
    </member>
    <member name="P:System.Web.Http.Routing.UrlHelper.Request">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> dell'istanza corrente di <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>Oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Restituisce la route per <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>Route per <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">Nome della route.</param>
      <param name="routeValues">Elenco di valori della route.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Object)">
      <summary>Restituisce la route per <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>Route per <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">Nome della route.</param>
      <param name="routeValues">Valori della route.</param>
    </member>
    <member name="T:System.Web.Http.Services.DefaultServices">
      <summary>  Rappresenta un contenitore per le istanze di servizio utilizzate da <see cref="T:System.Web.Http.HttpConfiguration" />. Questo contenitore supporta solo tipi noti. I metodi utilizzati per ottenere o impostare tipi di servizio arbitrari generano un'eccezione <see cref="T:System.ArgumentException" /> quando vengono chiamati. Per la creazione di tipi arbitrari utilizzare in alternativa <see cref="T:System.Web.Http.Dependencies.IDependencyResolver" />. Di seguito sono riportati i tipi supportati per questo contenitore:        <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /><see cref="T:System.Web.Http.Description.IApiExplorer" /><see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /><see cref="T:System.Web.Http.Validation.IBodyModelValidator" /><see cref="T:System.Net.Http.Formatting.IContentNegotiator" /><see cref="T:System.Web.Http.Description.IDocumentationProvider" /><see cref="T:System.Web.Http.Filters.IFilterProvider" /><see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /><see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /><see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /><see cref="T:System.Web.Http.Tracing.ITraceManager" /><see cref="T:System.Web.Http.Tracing.ITraceWriter" /><see cref="T:System.Web.Http.Query.IStructuredQueryBuilder" /><see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /><see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /><see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /><see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> Se un tipo non riportato in questo elenco viene passato a qualsiasi metodo nell'interfaccia corrente, verrà generata un'eccezione <see cref="T:System.ArgumentException" />. </summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Services.DefaultServices" />.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Services.DefaultServices" /> con un oggetto <see cref="T:System.Web.Http.HttpConfiguration" /> specificato.</summary>
      <param name="configuration">Oggetto <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ClearSingle(System.Type)">
      <summary>Rimuove un servizio a istanza singola dai servizi predefiniti.</summary>
      <param name="serviceType">Tipo del servizio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.Dispose">
      <summary>Esegue le attività definite dall'applicazione relative alla liberazione, al rilascio o alla reimpostazione di risorse non gestite.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetService(System.Type)">
      <summary>Ottiene un servizio del tipo specificato.</summary>
      <returns>Prima istanza del servizio oppure null se la ricerca del servizio ha esito negativo.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServiceInstances(System.Type)">
      <summary>Ottiene l'elenco degli oggetti servizio per un tipo di servizio specificato e convalida tale tipo di servizio.</summary>
      <returns>Elenco di oggetti servizio del tipo specificato.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServices(System.Type)">
      <summary>Ottiene l'elenco di oggetti servizio per un tipo di servizio specificato.</summary>
      <returns>Elenco di oggetti servizio del tipo specificato oppure un elenco vuoto se la ricerca del servizio ha esito negativo.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.IsSingleService(System.Type)">
      <summary>Esegue una query per determinare se un tipo di servizio è a istanza singola.</summary>
      <returns>true se il tipo di servizio supporta una singola istanza. false se supporta istanze multiple.</returns>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Sostituisce un oggetto servizio a istanza singola.</summary>
      <param name="serviceType">Tipo di servizio.</param>
      <param name="service">Oggetto servizio che sostituisce l'istanza precedente.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ResetCache(System.Type)">
      <summary>Rimuove i valori memorizzati nella cache per un singolo tipo di servizio.</summary>
      <param name="serviceType">Tipo di servizio.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceManager">
      <summary>Rappresenta una classe di traccia utilizzata per registrare le prestazioni di ingresso, uscita e durata di un metodo.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceManager.Initialize(System.Web.Http.HttpConfiguration)">
      <summary>Inizializza la classe <see cref="T:System.Web.Http.Tracing.ITraceManager" /> con una configurazione specificata.</summary>
      <param name="configuration">Configurazione.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriter">
      <summary>Rappresenta il writer di traccia.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriter.Trace(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Richiama il valore specificato per traceAction per consentire l'impostazione di valori in un nuovo oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> se e solo se la traccia è consentita per la categoria e il livello specificati. </summary>
      <param name="request">Oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> corrente.   Può essere null, ma in tal caso la successiva analisi di traccia non riuscirà a correlare la traccia a una particolare richiesta.</param>
      <param name="category">Categoria logica per la traccia.  Gli utenti possono definire una categoria personalizzata.</param>
      <param name="level">
        <see cref="T:System.Web.Http.Tracing.TraceLevel" /> in cui scrivere la traccia.</param>
      <param name="traceAction">Azione da richiamare se la traccia è abilitata.  Il chiamante dovrà completare i campi dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato in questa azione.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriterExtensions">
      <summary>Rappresenta un metodo di estensione per <see cref="T:System.Web.Http.Tracing.ITraceWriter" />. </summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Fornisce un set di metodi e di proprietà che consente di eseguire il debug del codice con il writer, la richiesta, la categoria e l'eccezione specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Fornisce un set di metodi e di proprietà che consente di eseguire il debug del codice con il writer, la richiesta, la categoria, l'eccezione, il formato del messaggio e l'argomento del messaggio specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Fornisce un set di metodi e di proprietà che consente di eseguire il debug del codice con il writer, la richiesta, la categoria, l'eccezione, il formato del messaggio e l'argomento del messaggio specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Visualizza un messaggio di errore nell'elenco con il writer, la richiesta, la categoria e l'eccezione specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Visualizza un messaggio di errore nell'elenco con il writer, la richiesta, la categoria, l'eccezione, il formato del messaggio e l'argomento del messaggio specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">Eccezione.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento contenuto nel messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Visualizza un messaggio di errore nell'elenco con il writer, la richiesta, la categoria, il formato del messaggio e l'argomento del messaggio specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento contenuto nel messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Visualizza un messaggio di errore nella classe <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> con il writer, la richiesta, la categoria e l'eccezione specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">Eccezione visualizzata durante l'esecuzione.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Visualizza un messaggio di errore nella classe <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> con il writer, la richiesta, la categoria, l'eccezione, il formato del messaggio e l'argomento del messaggio specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">Eccezione.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Visualizza un messaggio di errore nella classe <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> con il writer, la richiesta, la categoria, il formato del messaggio e l'argomento del messaggio specificati.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Visualizza i dettagli nella classe <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Visualizza i dettagli nella classe <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Visualizza i dettagli nella classe <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception)">
      <summary>Indica i listener di traccia nella raccolta Listeners.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="level">Livello di traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception,System.String,System.Object[])">
      <summary>Indica i listener di traccia nella raccolta Listeners.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="level">Livello di traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.Object[])">
      <summary>Indica i listener di traccia nella raccolta Listeners.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="level">
        <see cref="T:System.Web.Http.Tracing.TraceLevel" /> della traccia.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEnd(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary>Definisce una traccia iniziale e una finale per un'operazione specificata.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia.  Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="level">
        <see cref="T:System.Web.Http.Tracing.TraceLevel" /> della traccia.</param>
      <param name="operatorName">Nome dell'oggetto che esegue l'operazione. Può essere null.</param>
      <param name="operationName">Nome dell'operazione eseguita.  Può essere null.</param>
      <param name="beginTrace">
        <see cref="T:System.Action" /> da richiamare prima dell'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Può essere null.</param>
      <param name="execute">&lt;see cref="T:System.Func`1" /&gt; che restituisce l'istanza di <see cref="T:System.Threading.Tasks.Task" /> che eseguirà l'operazione.</param>
      <param name="endTrace">
        <see cref="T:System.Action" /> da richiamare dopo l'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Può essere null.</param>
      <param name="errorTrace">
        <see cref="T:System.Action" /> da richiamare se si è verificato un errore durante l'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Può essere null.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync``1(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task{``0}},System.Action{System.Web.Http.Tracing.TraceRecord,``0},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Definisce una traccia iniziale e una finale per un'operazione specificata. </summary>
      <returns>Istanza di <see cref="T:System.Threading.Tasks.Task" /> restituita dall'operazione.</returns>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="level">
        <see cref="T:System.Web.Http.Tracing.TraceLevel" /> della traccia.</param>
      <param name="operatorName">Nome dell'oggetto che esegue l'operazione. Può essere null.</param>
      <param name="operationName">Nome dell'operazione eseguita. Può essere null.</param>
      <param name="beginTrace">
        <see cref="T:System.Action" /> da richiamare prima dell'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Può essere null.</param>
      <param name="execute">&lt;see cref="T:System.Func`1" /&gt; che restituisce l'istanza di <see cref="T:System.Threading.Tasks.Task" /> che eseguirà l'operazione.</param>
      <param name="endTrace">
        <see cref="T:System.Action" /> da richiamare dopo l'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Anche il risultato dell'attività completata verrà passato a questa azione. Questa azione può essere null.</param>
      <param name="errorTrace">
        <see cref="T:System.Action" /> da richiamare se si è verificato un errore durante l'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Può essere null.</param>
      <typeparam name="TResult">Tipo di risultato generato dall'istanza di <see cref="T:System.Threading.Tasks.Task" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task},System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Definisce una traccia iniziale e una finale per un'operazione specificata. </summary>
      <returns>Istanza di <see cref="T:System.Threading.Tasks.Task" /> restituita dall'operazione.</returns>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia.  Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="level">
        <see cref="T:System.Web.Http.Tracing.TraceLevel" /> della traccia.</param>
      <param name="operatorName">Nome dell'oggetto che esegue l'operazione. Può essere null.</param>
      <param name="operationName">Nome dell'operazione eseguita. Può essere null.</param>
      <param name="beginTrace">
        <see cref="T:System.Action" /> da richiamare prima dell'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Può essere null.</param>
      <param name="execute">&lt;see cref="T:System.Func`1" /&gt; che restituisce l'istanza di <see cref="T:System.Threading.Tasks.Task" /> che eseguirà l'operazione.</param>
      <param name="endTrace">
        <see cref="T:System.Action" /> da richiamare dopo l'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Può essere null.</param>
      <param name="errorTrace">
        <see cref="T:System.Action" /> da richiamare se si è verificato un errore durante l'esecuzione dell'operazione, in modo da consentire il completamento dell'oggetto <see cref="T:System.Web.Http.Tracing.TraceRecord" /> specificato. Può essere null.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Indica il livello di avviso dell'esecuzione.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Indica il livello di avviso dell'esecuzione.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="exception">L'errore si è verificato durante l'esecuzione.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Indica il livello di avviso dell'esecuzione.</summary>
      <param name="traceWriter">Classe <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">
        <see cref="T:System.Net.Http.HttpRequestMessage" /> da utilizzare per l'associazione della traccia. Può essere null.</param>
      <param name="category">Categoria logica della traccia.</param>
      <param name="messageFormat">Formato del messaggio.</param>
      <param name="messageArguments">Argomento del messaggio.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceCategories">
      <summary>Specifica un'enumerazione di categorie di traccia.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ActionCategory">
      <summary>Categoria di azione.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ControllersCategory">
      <summary>Categoria di controller.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FiltersCategory">
      <summary>Categoria di filtri.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FormattingCategory">
      <summary>Categoria di formattazione.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.MessageHandlersCategory">
      <summary>Categoria di gestori di messaggi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ModelBindingCategory">
      <summary>Categoria di associazione del modello.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RequestCategory">
      <summary>Categoria di richiesta.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RoutingCategory">
      <summary>Categoria di routing.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceKind">
      <summary>Specifica il tipo di operazione di traccia.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Trace">
      <summary>Traccia singola, non inclusa in una coppia di tracce iniziale/finale.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Begin">
      <summary>Traccia che contrassegna l'inizio di un'operazione.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.End">
      <summary>Traccia che contrassegna la fine di un'operazione.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceLevel">
      <summary>Specifica un'enumerazione di livello di traccia.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Off">
      <summary>La traccia è disabilitata.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Debug">
      <summary>Livello per le tracce di debug.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Info">
      <summary>Livello per le tracce informative.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Warn">
      <summary>Livello per le tracce di avviso.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Error">
      <summary>Livello per le tracce di errore.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Fatal">
      <summary>Livello per le tracce di errore irreversibile.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceRecord">
      <summary>Rappresenta un record di traccia.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.TraceRecord.#ctor(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Tracing.TraceRecord" />.</summary>
      <param name="request">Richiesta di messaggio.</param>
      <param name="category">Categoria di traccia.</param>
      <param name="level">Livello di traccia.</param>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Category">
      <summary>Ottiene o imposta la categoria di traccia.</summary>
      <returns>Categoria di traccia.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Exception">
      <summary>Ottiene o imposta l'eccezione.</summary>
      <returns>Eccezione.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Kind">
      <summary>Ottiene o imposta il tipo di traccia.</summary>
      <returns>Tipo di traccia.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Level">
      <summary>Ottiene o imposta il livello di traccia.</summary>
      <returns>Livello di traccia.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Message">
      <summary>Ottiene o imposta il messaggio.</summary>
      <returns>Messaggio.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operation">
      <summary>Ottiene o imposta il nome logico dell'operazione eseguita.</summary>
      <returns>Nome logico dell'operazione eseguita.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operator">
      <summary>Ottiene o imposta il nome logico dell'oggetto che esegue l'operazione.</summary>
      <returns>Nome logico dell'oggetto che esegue l'operazione.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Properties">
      <summary>Ottiene le proprietà facoltative definite dall'utente.</summary>
      <returns>Proprietà facoltative definite dall'utente.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Request">
      <summary>Ottiene l'oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> dal record.</summary>
      <returns>Oggetto <see cref="T:System.Net.Http.HttpRequestMessage" /> ottenuto dal record.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.RequestId">
      <summary>Ottiene l'ID di correlazione da <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</summary>
      <returns>ID di correlazione ottenuto da <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Status">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Net.HttpStatusCode" /> associato a <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Oggetto <see cref="T:System.Net.HttpStatusCode" /> associato a <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Timestamp">
      <summary>Ottiene l'oggetto <see cref="T:System.DateTime" /> della traccia (tramite <see cref="P:System.DateTime.UtcNow" />).</summary>
      <returns>Oggetto <see cref="T:System.DateTime" /> della traccia (ottenuto tramite <see cref="P:System.DateTime.UtcNow" />).</returns>
    </member>
    <member name="T:System.Web.Http.Validation.DefaultBodyModelValidator">
      <summary>Rappresenta una classe utilizzata per convalidare un oggetto in modo ricorsivo.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.DefaultBodyModelValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary> Determina se il modello è valido e aggiunge eventuali errori di convalida all'istanza di <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> di actionContext.</summary>
      <returns>True se il modello è valido. In caso contrario, false.</returns>
      <param name="model">Modello da convalidare.</param>
      <param name="type">
        <see cref="T:System.Type" /> da utilizzare per la convalida.</param>
      <param name="metadataProvider">
        <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> utilizzato per fornire i metadati del modello.</param>
      <param name="actionContext">
        <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> in cui viene eseguita la convalida del modello.</param>
      <param name="keyPrefix">
        <see cref="T:System.String" /> da aggiungere alla chiave per eventuali errori di convalida.</param>
    </member>
    <member name="T:System.Web.Http.Validation.IBodyModelValidator">
      <summary>Rappresenta un'interfaccia per la convalida dei modelli.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.IBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary> Determina se il modello è valido e aggiunge eventuali errori di convalida all'istanza di <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> di actionContext.</summary>
      <returns>true se il modello è valido. In caso contrario, false.</returns>
      <param name="model">Modello da convalidare.</param>
      <param name="type">
        <see cref="T:System.Type" /> da utilizzare per la convalida.</param>
      <param name="metadataProvider">
        <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> utilizzato per fornire i metadati del modello.</param>
      <param name="actionContext">
        <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> in cui viene eseguita la convalida del modello.</param>
      <param name="keyPrefix">
        <see cref="T:System.String" /> da aggiungere alla chiave per eventuali errori di convalida.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelStateFormatterLogger">
      <summary>L'interfaccia <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> registra gli errori del formattatore nell'oggetto <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> specificato.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelStateFormatterLogger" />.</summary>
      <param name="modelState">Stato del modello.</param>
      <param name="prefix">Prefisso.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.Exception)">
      <summary>Registra l'errore del modello specificato.</summary>
      <param name="errorPath">Percorso dell'errore.</param>
      <param name="exception">Messaggio di errore.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.String)">
      <summary>Registra l'errore del modello specificato.</summary>
      <param name="errorPath">Percorso dell'errore.</param>
      <param name="errorMessage">Messaggio di errore.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatedEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validated" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatedEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelValidatedEventArgs" />.</summary>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="parentNode">Nodo padre.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ActionContext">
      <summary>Ottiene o imposta il contesto per un'azione.</summary>
      <returns>Contesto per un'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ParentNode">
      <summary>Ottiene o imposta l'elemento padre del nodo.</summary>
      <returns>Elemento padre del nodo.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatingEventArgs">
      <summary>Fornisce dati per l'evento <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validating" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatingEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelValidatingEventArgs" />.</summary>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="parentNode">Nodo padre.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ActionContext">
      <summary>Ottiene o imposta il contesto per un'azione.</summary>
      <returns>Contesto per un'azione.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ParentNode">
      <summary>Ottiene o imposta l'elemento padre del nodo.</summary>
      <returns>Elemento padre del nodo.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationNode">
      <summary>Fornisce un contenitore per le informazioni di convalida del modello.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> utilizzando i metadati e la chiave di stato del modello.</summary>
      <param name="modelMetadata">Metadati del modello.</param>
      <param name="modelStateKey">Chiave di stato del modello.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidationNode})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> utilizzando i metadati, la chiave di stato e i nodi figlio di convalida del modello.</summary>
      <param name="modelMetadata">Metadati del modello.</param>
      <param name="modelStateKey">Chiave di stato del modello.</param>
      <param name="childNodes">Nodi figlio del modello.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ChildNodes">
      <summary>Ottiene o imposta i nodi figlio.</summary>
      <returns>Nodi figlio.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.CombineWith(System.Web.Http.Validation.ModelValidationNode)">
      <summary>Combina l'istanza corrente di <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> con un'istanza specificata di <see cref="T:System.Web.Http.Validation.ModelValidationNode" />.</summary>
      <param name="otherNode">Nodo di convalida del modello da combinare con l'istanza corrente.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelMetadata">
      <summary>Ottiene o imposta i metadati del modello.</summary>
      <returns>Metadati del modello.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelStateKey">
      <summary>Ottiene o imposta la chiave di stato del modello.</summary>
      <returns>Chiave di stato del modello.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.SuppressValidation">
      <summary>Ottiene o imposta un valore che indica se la convalida deve essere eliminata.</summary>
      <returns>true se la convalida deve essere eliminata. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Esegue la convalida del modello utilizzando il contesto di esecuzione specificato.</summary>
      <param name="actionContext">Contesto dell'azione.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Esegue la convalida del modello utilizzando il contesto di esecuzione e il nodo padre specificati.</summary>
      <param name="actionContext">Contesto dell'azione.</param>
      <param name="parentNode">Nodo padre.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ValidateAllProperties">
      <summary>Ottiene o imposta un valore che indica se tutte le proprietà del modello devono essere convalidate.</summary>
      <returns>true se tutte le proprietà del modello devono essere convalidate oppure false se la convalida deve essere ignorata.</returns>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validated">
      <summary>Si verifica quando il modello è stato convalidato.</summary>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validating">
      <summary>Si verifica quando è in corso la convalida del modello.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector">
      <summary>Rappresenta la selezione di membri obbligatori verificando la disponibilità degli oggetti ModelValidators obbligatori associati al membro.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector" />.</summary>
      <param name="metadataProvider">Provider di metadati.</param>
      <param name="validatorProviders">Provider di validator.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.IsRequiredMember(System.Reflection.MemberInfo)">
      <summary>Indica se il membro è obbligatorio ai fini della convalida.</summary>
      <returns>true se il membro è obbligatorio ai fini della convalida. In caso contrario, false.</returns>
      <param name="member">Membro.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationResult">
      <summary>Fornisce un contenitore per un risultato di convalida.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationResult.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.MemberName">
      <summary>Ottiene o imposta il nome del membro.</summary>
      <returns>Nome del membro.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.Message">
      <summary>Ottiene o imposta il messaggio del risultato di convalida.</summary>
      <returns>Messaggio del risultato di convalida.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidator">
      <summary>Fornisce una classe di base per l'implementazione della logica di convalida.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelValidator" />.</summary>
      <param name="validatorProviders">Provider di validator.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.GetModelValidator(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Restituisce un validator del modello composito per il modello.</summary>
      <returns>Validator del modello composito per il modello.</returns>
      <param name="validatorProviders">Enumerazione di provider di validator.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.IsRequired">
      <summary>Ottiene un valore che indica se una proprietà del modello è obbligatoria.</summary>
      <returns>true se la proprietà del modello è obbligatoria. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Convalida un oggetto specificato.</summary>
      <returns>Elenco dei risultati di convalida.</returns>
      <param name="metadata">Metadati.</param>
      <param name="container">Contenitore.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.ValidatorProviders">
      <summary>Ottiene o imposta un'enumerazione di provider di validator.</summary>
      <returns>Enumerazione di provider di validator.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatorProvider">
      <summary>Fornisce un elenco di validator per un modello.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Ottiene un elenco di validator associati a questo <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
      <returns>Elenco di validator.</returns>
      <param name="metadata">Metadati.</param>
      <param name="validatorProviders">Provider di validator.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider">
      <summary>Fornisce una classe astratta per le classi che implementano un provider di convalida.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Ottiene un descrittore di tipi per il tipo specificato.</summary>
      <returns>Descrittore di tipi per il tipo specificato.</returns>
      <param name="type">Tipo del provider di convalida.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Ottiene i validator per il modello utilizzando i metadati e i provider di validator.</summary>
      <returns>Validator per il modello.</returns>
      <param name="metadata">Metadati.</param>
      <param name="validatorProviders">Enumerazione di provider di validator.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ottiene i validator per il modello utilizzando i metadati, i provider di validator e un elenco di attributi.</summary>
      <returns>Validator per il modello.</returns>
      <param name="metadata">Metadati.</param>
      <param name="validatorProviders">Enumerazione di provider di validator.</param>
      <param name="attributes">Elenco di attributi.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory">
      <summary>Rappresenta il metodo che crea un'istanza di <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider">
      <summary>Rappresenta un'implementazione di <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> che fornisce ai validator attributi derivanti da <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> e tipi che implementano <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. Per il supporto della convalida lato client, è possibile registrare gli adattatori tramite metodi statici sulla classe oppure impostando gli attributi di convalida in modo da implementare l'interfaccia <see cref="T:System.Web.Http.Validation.IClientValidatable" />. La logica per il supporto di IClientValidatable è implementata in <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ottiene i validator per il modello utilizzando i metadati, il provider di validator e gli attributi specificati.</summary>
      <returns>Validator per il modello.</returns>
      <param name="metadata">Metadati.</param>
      <param name="validatorProviders">Provider di validator.</param>
      <param name="attributes">Attributi.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Registra un adattatore per fornire la convalida lato client.</summary>
      <param name="attributeType">Tipo dell'attributo di convalida.</param>
      <param name="adapterType">Tipo dell'adattatore.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Registra una factory dell'adattatore per il provider di convalida.</summary>
      <param name="attributeType">Tipo dell'attributo.</param>
      <param name="factory">Factory che sarà utilizzata per creare l'oggetto <see cref="T:System.Web.Http.Validation.ModelValidator" /> per l'attributo specificato.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Registra l'adattatore predefinito.</summary>
      <param name="adapterType">Tipo dell'adattatore.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Registra la factory dell'adattatore predefinito.</summary>
      <param name="factory">Factory che sarà utilizzata per creare l'oggetto <see cref="T:System.Web.Http.Validation.ModelValidator" /> per l'adattatore predefinito.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Registra il tipo di adattatore predefinito per gli oggetti che implementano <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. Il tipo di adattatore deve derivare da <see cref="T:System.Web.Http.Validation.ModelValidator" /> e deve contenere un costruttore pubblico che accetta due parametri di tipo <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> e <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <param name="adapterType">Tipo dell'adattatore.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra la factory dell'adattatore predefinito per gli oggetti che implementano <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. </summary>
      <param name="factory">Factory.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Registra un tipo di adattatore per il tipo modelType specificato, che deve implementare <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. Il tipo di adattatore deve derivare da <see cref="T:System.Web.Http.Validation.ModelValidator" /> e deve contenere un costruttore pubblico che accetta due parametri di tipo <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> e <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <param name="modelType">Tipo di modello.</param>
      <param name="adapterType">Tipo dell'adattatore.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra una factory dell'adattatore per il tipo modelType specificato, che deve implementare <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. </summary>
      <param name="modelType">Tipo di modello.</param>
      <param name="factory">Factory.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Fornisce una factory per i validator basati sull'oggetto <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider">
      <summary>Rappresenta un provider di validator per il modello di membro dati.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ottiene i validator per il modello.</summary>
      <returns>Validator per il modello.</returns>
      <param name="metadata">Metadati.</param>
      <param name="validatorProviders">Enumeratore di provider di validator.</param>
      <param name="attributes">Elenco di attributi.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider">
      <summary>Implementazione di <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> per fornire validator che generano eccezioni quando il modello non è valido.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ottiene un elenco di validator associati all'oggetto <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />.</summary>
      <returns>Elenco di validator.</returns>
      <param name="metadata">Metadati.</param>
      <param name="validatorProviders">Provider di validator.</param>
      <param name="attributes">Elenco di attributi.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider">
      <summary>Rappresenta il provider per il validator del modello di membro richiesto.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.#ctor(System.Net.Http.Formatting.IRequiredMemberSelector)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider" />.</summary>
      <param name="requiredMemberSelector">Selettore del membro richiesto.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Ottiene il validator per il modello di membro.</summary>
      <returns>Validator per il modello di membro.</returns>
      <param name="metadata">Metadati.</param>
      <param name="validatorProviders">Provider di validator.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator">
      <summary>Fornisce un validator del modello.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />.</summary>
      <param name="validatorProviders">Provider di validator.</param>
      <param name="attribute">Attributo di convalida per il modello.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Attribute">
      <summary>Ottiene o imposta l'attributo di convalida per il validator del modello.</summary>
      <returns>Attributo di convalida per il validator del modello.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.IsRequired">
      <summary>Ottiene un valore che indica se la convalida del modello è obbligatoria.</summary>
      <returns>true se la convalida del modello è obbligatoria. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Esegue la convalida del modello e restituisce gli eventuali errori di convalida.</summary>
      <returns>Un elenco di messaggi di errore di convalida per il modello o un elenco vuoto se non si sono verificati errori.</returns>
      <param name="metadata">Metadati del modello.</param>
      <param name="container">Contenitore per il modello.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ErrorModelValidator">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelValidator" /> per rappresentare un errore. Questo validator genererà sempre un'eccezione, indipendentemente dall'effettivo valore del modello.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Validators.ErrorModelValidator" />.</summary>
      <param name="validatorProviders">Elenco di provider di validator del modello.</param>
      <param name="errorMessage">Messaggio di errore per l'eccezione.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Convalida un oggetto specificato.</summary>
      <returns>Elenco dei risultati di convalida.</returns>
      <param name="metadata">Metadati.</param>
      <param name="container">Contenitore.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator">
      <summary>Rappresenta la classe <see cref="T:System.Web.Http.Validation.ModelValidator" /> per i membri obbligatori. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator" />.</summary>
      <param name="validatorProviders">Provider di validator.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.IsRequired">
      <summary>Ottiene o imposta un valore che indica al motore di serializzazione che il membro deve essere presente durante la convalida.</summary>
      <returns>true se il membro è obbligatorio. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Convalida l'oggetto.</summary>
      <returns>Elenco dei risultati di convalida.</returns>
      <param name="metadata">Metadati.</param>
      <param name="container">Contenitore.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter">
      <summary>Fornisce un adattatore dell'oggetto che può essere convalidato.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter" />.</summary>
      <param name="validatorProviders">Provider di convalida.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Convalida l'oggetto specificato.</summary>
      <returns>Elenco dei risultati di convalida.</returns>
      <param name="metadata">Metadati.</param>
      <param name="container">Contenitore.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IEnumerableValueProvider">
      <summary>Rappresenta la classe di base per i provider di valori i cui valori provengono da un insieme che implementa l'interfaccia <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Recupera le chiavi dal prefisso <paramref name="prefix" /> specificato.</summary>
      <returns>Chiavi ottenute dal prefisso <paramref name="prefix" /> specificato.</returns>
      <param name="prefix">Prefisso.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IValueProvider">
      <summary>Definisce i metodi richiesti per un provider di valori in MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.ContainsPrefix(System.String)">
      <summary>Determina se la raccolta contiene il prefisso specificato.</summary>
      <returns>true se la raccolta contiene il prefisso specificato. In caso contrario, false.</returns>
      <param name="prefix">Prefisso da ricercare.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.GetValue(System.String)">
      <summary>Recupera un oggetto valore mediante la chiave specificata.</summary>
      <returns>Oggetto valore per la chiave specificata.</returns>
      <param name="key">Chiave dell'oggetto valore da recuperare.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderAttribute">
      <summary> Questo attributo viene utilizzato per specificare un'istanza personalizzata di <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />. </summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactory">Tipo dello strumento di associazione di modelli.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type[])">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactories">Matrice di tipi dello strumento di associazione di modelli.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Ottiene le factory del provider di valori.</summary>
      <returns>Raccolta di factory del provider di valori.</returns>
      <param name="configuration">Oggetto di configurazione.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderAttribute.ValueProviderFactoryTypes">
      <summary>Ottiene i tipi dell'oggetto restituito dalla factory del provider di valori.</summary>
      <returns>Raccolta di tipi.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderFactory">
      <summary>Rappresenta una factory per la creazione di oggetti provider di valori.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Restituisce un oggetto provider di valori per il contesto del controller specificato.</summary>
      <returns>Oggetto provider di valori.</returns>
      <param name="actionContext">Oggetto che incapsula le informazioni sulla richiesta HTTP corrente.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderResult">
      <summary>Rappresenta il risultato dell'associazione di un valore (ad esempio da un form o da una stringa di query) con una proprietà dell'argomento del metodo di azione o all'argomento stesso.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />.</summary>
      <param name="rawValue">Valore non elaborato.</param>
      <param name="attemptedValue">Valore utilizzato come tentativo.</param>
      <param name="culture">Impostazioni cultura.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.AttemptedValue">
      <summary>Ottiene o imposta il valore non elaborato convertito in una stringa per la visualizzazione.</summary>
      <returns>Valore non elaborato convertito in una stringa per la visualizzazione.</returns>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Converte il valore incapsulato dal risultato nel tipo specificato.</summary>
      <returns>Valore convertito.</returns>
      <param name="type">Tipo di destinazione.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Converte il valore incapsulato dal risultato nel tipo specificato utilizzando le informazioni relative alle impostazioni cultura specificate.</summary>
      <returns>Valore convertito.</returns>
      <param name="type">Tipo di destinazione.</param>
      <param name="culture">Impostazioni cultura da utilizzare nella conversione.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.Culture">
      <summary>Ottiene o imposta le impostazioni cultura.</summary>
      <returns>Impostazioni cultura.</returns>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.RawValue">
      <summary>Ottiene o imposta il valore non elaborato fornito dal provider di valori.</summary>
      <returns>Valore non elaborato fornito dal provider di valori.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider">
      <summary>Rappresenta un provider di valori i cui valori provengono da un elenco di provider di valori che implementa l'interfaccia <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor(System.Collections.Generic.IList{System.Web.Http.ValueProviders.IValueProvider})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />.</summary>
      <param name="list">Elenco di provider di valori.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.ContainsPrefix(System.String)">
      <summary>Determina se la raccolta contiene il prefisso <paramref name="prefix" /> specificato.</summary>
      <returns>true se la raccolta contiene il prefisso <paramref name="prefix" /> specificato. In caso contrario, false.</returns>
      <param name="prefix">Prefisso da ricercare.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Recupera le chiavi dal prefisso <paramref name="prefix" /> specificato.</summary>
      <returns>Chiavi ottenute dal prefisso <paramref name="prefix" /> specificato.</returns>
      <param name="prefix">Prefisso dal quale vengono recuperate le chiavi.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetValue(System.String)">
      <summary>Recupera un oggetto valore mediante la chiave <paramref name="key" /> specificata.</summary>
      <returns>Oggetto valore per la chiave <paramref name="key" /> specificata.</returns>
      <param name="key">Chiave dell'oggetto valore da recuperare.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.InsertItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Consente di inserire un elemento nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale deve essere inserito <paramref name="item" />.</param>
      <param name="item">Oggetto da inserire.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.SetItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Sostituisce l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da sostituire.</param>
      <param name="item">Nuovo valore dell'elemento in corrispondenza dell'indice specificato.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory">
      <summary>Rappresenta una factory per la creazione di un elenco di oggetti provider di valori.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory" />.</summary>
      <param name="factories">Raccolta di factory del provider di valori.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera un elenco di oggetti provider di valori per il contesto del controller specificato.</summary>
      <returns>Elenco di oggetti provider di valori per il contesto del controller specificato.</returns>
      <param name="actionContext">Oggetto che incapsula le informazioni sulla richiesta HTTP corrente.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider">
      <summary>Provider di valori per coppie nome/valore.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Globalization.CultureInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" />.</summary>
      <param name="values">Coppie nome/valore per il provider.</param>
      <param name="culture">Impostazioni cultura utilizzate per le coppie nome/valore.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}},System.Globalization.CultureInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" /> utilizzando un delegato della funzione per fornire le coppie nome/valore.</summary>
      <param name="valuesFactory">Delegato della funzione che restituisce una raccolta di coppie nome/valore.</param>
      <param name="culture">Impostazioni cultura utilizzate per le coppie nome/valore.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.ContainsPrefix(System.String)">
      <summary>Determina se la raccolta contiene il prefisso specificato.</summary>
      <returns>true se la raccolta contiene il prefisso specificato. In caso contrario, false.</returns>
      <param name="prefix">Prefisso da ricercare.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Ottiene le chiavi da un prefisso.</summary>
      <returns>Chiavi.</returns>
      <param name="prefix">Prefisso.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetValue(System.String)">
      <summary>Recupera un oggetto valore mediante la chiave specificata.</summary>
      <returns>Oggetto valore per la chiave specificata.</returns>
      <param name="key">Chiave dell'oggetto valore da recuperare.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider">
      <summary>Rappresenta un provider di valori per stringhe di query contenute in un oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider" />.</summary>
      <param name="actionContext">Oggetto che incapsula le informazioni sulla richiesta HTTP corrente.</param>
      <param name="culture">Oggetto contenente informazioni sulle impostazioni cultura di destinazione.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory">
      <summary>Rappresenta una classe responsabile della creazione di una nuova istanza di un oggetto provider di valori per stringhe di query.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera un oggetto provider di valori per il contesto del controller specificato.</summary>
      <returns>Oggetto provider di valori per stringhe di query.</returns>
      <param name="actionContext">Oggetto che incapsula le informazioni sulla richiesta HTTP corrente.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider">
      <summary>Rappresenta un provider di valori per dati della route contenuti in un oggetto che implementa l'interfaccia IDictionary(Of TKey, TValue).</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider" />.</summary>
      <param name="actionContext">Oggetto contenente informazioni sulla richiesta HTTP.</param>
      <param name="culture">Oggetto contenente informazioni sulle impostazioni cultura di destinazione.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory">
      <summary>Rappresenta una factory per la creazione di oggetti provider di valori per dati della route.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera un oggetto provider di valori per il contesto del controller specificato.</summary>
      <returns>Oggetto provider di valori.</returns>
      <param name="actionContext">Oggetto che incapsula le informazioni sulla richiesta HTTP corrente.</param>
    </member>
  </members>
</doc>